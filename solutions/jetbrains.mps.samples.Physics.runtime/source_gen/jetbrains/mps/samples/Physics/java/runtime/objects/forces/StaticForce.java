package jetbrains.mps.samples.Physics.java.runtime.objects.forces;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.runtime.objects.SystemScope;
import org.ode4j.math.DVector3C;
import org.ode4j.math.DVector3;
import jetbrains.mps.samples.Physics.java.common.vectors.ForceMode;
import jetbrains.mps.samples.Physics.java.runtime.objects.World;
import jetbrains.mps.samples.Physics.java.runtime.objects.PhysicalEntity;

/**
 * Force that do not change over time
 */
public class StaticForce<T extends SystemScope> implements Force<T> {
  private DVector3C value;
  private DVector3C applicationPoint;
  private int mode;

  public StaticForce(DVector3 value) {
    this(value, null, ForceMode.DEFAULT);
  }

  public StaticForce(DVector3C value, DVector3C applicationPoint, int mode) {
    this.value = value;
    this.mode = mode;
    this.applicationPoint = applicationPoint;
  }
  @Override
  public DVector3C linearForce(World world, T scope, PhysicalEntity targetEntity, double time) {
    return value;
  }

  @Override
  public DVector3C applicationPoint(World world, T scope, PhysicalEntity currentEntity, double time) {
    return applicationPoint;
  }


  @Override
  public int forceMode() {
    return mode;
  }
}
