package jetbrains.mps.samples.Physics.java.runtime;

/*Generated by MPS */

import processing.core.PApplet;
import processing.core.PGraphics;

public class Renderer extends PApplet {
  private static RendererCallback callback;

  private int lastWidth;
  private int lastHeight;
  private int resizeWait = -1;

  public Renderer() {
    super();
  }
  @Override
  public void settings() {
    size((int) (displayWidth * 0.8), (int) (displayHeight * 0.8), P3D);

    lastWidth = 800;
    lastHeight = 600;
  }
  @Override
  public void setup() {
    surface.setResizable(true);
    surface.setTitle("Physical simulation");

    background(0);
    fill(255);
    text("loading textures and setting up properties...", 5, 15);

    callback.setup(this);
  }
  @Override
  public void draw() {
    // Detect size change
    if (width != lastWidth || height != lastHeight) {
      if (resizeWait == -1) {
        resizeWait = 20;
      }

      resizeWait--;
      if (resizeWait == 0) {
        resizeWait = -1;
        lastWidth = width;
        lastHeight = height;
        callback.frameResized(this, width, height);
      }
    }

    background(0);

    callback.render(this, this.g);
  }
  @Override
  public void keyPressed() {
    callback.keyPressed(keyCode);
  }


  public static void afterInit(RendererCallback cb) {
    callback = cb;
  }
  public interface RendererCallback {
    void setup(Renderer renderer);
    void render(PApplet applet, PGraphics context);
    void keyPressed(int code);
    default void frameResized(PApplet app, int w, int h) {
    }

  }
  public static void main(String[] args) {
    PApplet.main(Renderer.class);
  }
}
