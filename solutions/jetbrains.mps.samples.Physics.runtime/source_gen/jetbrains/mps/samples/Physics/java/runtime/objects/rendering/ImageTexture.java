package jetbrains.mps.samples.Physics.java.runtime.objects.rendering;

/*Generated by MPS */

import com.badlogic.gdx.graphics.g3d.Material;
import com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute;
import com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute;

public class ImageTexture extends Texture {
  private String url;
  private com.badlogic.gdx.graphics.Texture loadedImage;

  public ImageTexture(String url) {
    this.url = url;
  }

  @Override
  public Material getMaterial(boolean emissive) {
    loadedImage = new com.badlogic.gdx.graphics.Texture(url);

    Material material = new Material();
    material.set(ColorAttribute.createDiffuse(Color.WHITE));
    material.set(FloatAttribute.createShininess(1.f));

    // TODO check this
    if (emissive) {
      material.set(ColorAttribute.createAmbient(Color.WHITE));
    }

    material.set(TextureAttribute.createDiffuse(loadedImage));
    return material;
  }


  @Override
  public Texture mergeWith(Texture other, float participation) {
    // No simple way to merge an image texture
    if (participation > 0.5) {
      return this;
    } else {
      return other;
    }
  }
}
