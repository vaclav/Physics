package jetbrains.mps.samples.Physics.java.runtime.objects.forces;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.runtime.objects.SystemScope;
import org.ode4j.math.DVector3C;
import jetbrains.mps.samples.Physics.java.runtime.objects.World;
import jetbrains.mps.samples.Physics.java.runtime.objects.PhysicalEntity;
import jetbrains.mps.samples.Physics.java.common.vectors.ForceMode;

/**
 * Object able to compute force from given world and target physical entity
 */
public interface Force<T extends SystemScope> {

  /**
   * Compute the linear force
   */
  DVector3C linearForce(World world, T scope, PhysicalEntity currentEntity, double time);

  DVector3C moment(World world, T scope, PhysicalEntity currentEntity, double time);

  /**
   * Compute the application point of the force
   */
  DVector3C applicationPoint(World world, T scope, PhysicalEntity currentEntity, double time);

  /**
   * Returns whether the current force is applied as linear force, as torque or both
   */
  default int forceMode() {
    return ForceMode.DEFAULT;
  }
}
