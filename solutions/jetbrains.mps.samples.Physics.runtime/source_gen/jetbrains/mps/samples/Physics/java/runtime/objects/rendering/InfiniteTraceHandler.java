package jetbrains.mps.samples.Physics.java.runtime.objects.rendering;

/*Generated by MPS */

import java.util.ArrayList;
import org.ode4j.math.DVector3C;
import processing.core.PGraphics;
import java.util.Iterator;

public class InfiniteTraceHandler extends TraceHandler {
  private ArrayList<float[]> content = new ArrayList<float[]>();

  public InfiniteTraceHandler(Color aspect) {
    super(aspect);
  }

  @Override
  protected void write(DVector3C positions, float scale) {
    content.add(new float[]{(float) (positions.get0() * scale), (float) (positions.get1() * scale), (float) (positions.get2() * scale)});
  }

  @Override
  protected void vertices(PGraphics ctx) {
    for (Iterator<float[]> iterator = content.iterator(); iterator.hasNext();) {
      float[] vals = iterator.next();
      ctx.vertex(vals[0], vals[1], vals[2]);
    }
  }

}
