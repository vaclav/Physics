package jetbrains.mps.samples.Physics.java.runtime;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.common.vectors.InternalVector;
import org.ode4j.math.DVector3C;
import java.math.BigDecimal;
import jetbrains.mps.samples.Physics.java.common.vectors.VectorLike;
import org.ode4j.math.DVector3;

public class VectorHelper {
  public static InternalVector internalFromDVector3C(DVector3C vec) {
    return new InternalVector(BigDecimal.valueOf(vec.get0()), BigDecimal.valueOf(vec.get1()), BigDecimal.valueOf(vec.get2()));
  }

  public static DVector3C fromInternal(VectorLike vec) {
    return new DVector3(vec.getX().doubleValue(), vec.getY().doubleValue(), vec.getZ().doubleValue());
  }

  public static DVector3C fromCartesian(BigDecimal x, BigDecimal y, BigDecimal z) {
    return new DVector3(x.doubleValue(), y.doubleValue(), z.doubleValue());
  }

  public static DVector3C fromSpherical(BigDecimal theta, BigDecimal phi, BigDecimal length) {
    return new DVector3(theta.doubleValue(), phi.doubleValue(), length.doubleValue());
  }

  public static DVector3C relativeTo(DVector3C vector, DVector3C relativeTo) {
    return new DVector3(vector.get0() + relativeTo.get0(), vector.get1() + relativeTo.get1(), vector.get2() + relativeTo.get2());
  }
}
