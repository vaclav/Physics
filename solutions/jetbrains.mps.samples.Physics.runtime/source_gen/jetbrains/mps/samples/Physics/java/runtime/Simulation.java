package jetbrains.mps.samples.Physics.java.runtime;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.runtime.objects.World;
import processing.core.PApplet;
import processing.core.PGraphics;
import jetbrains.mps.samples.Physics.java.runtime.objects.rendering.MetricsRendering;

public abstract class Simulation implements Renderer.RendererCallback {
  protected World world;
  protected double simulationSpeed;
  protected float renderScale;

  public Simulation(double simulationSpeed, float renderScale) {
    this.simulationSpeed = simulationSpeed;
    this.renderScale = renderScale;
  }

  @Override
  public void initialized(Renderer renderer) {
    world = new World(simulationSpeed);
    init(world);
  }


  @Override
  public void render(PApplet applet, PGraphics ctx) {
    ctx.background(0);

    world.render(ctx, renderScale);
    world.step();

    ctx.camera();
    ctx.noLights();
    ctx.hint(PApplet.DISABLE_DEPTH_TEST);
    ctx.textMode(PApplet.MODEL);

    MetricsRendering.render(world, ctx);

    ctx.hint(PApplet.ENABLE_DEPTH_TEST);

  }
  @Override
  public void keyPressed(int code) {
    // Space bar 
    if (code == 32) {
      world.setPaused(!(world.isPaused()));
    }
  }

  protected abstract void init(World world);
}
