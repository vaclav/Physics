package jetbrains.mps.samples.Physics.java.runtime.objects.rendering;

/*Generated by MPS */

import org.ode4j.math.DVector3C;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import jetbrains.mps.samples.Physics.java.common.vectors.VectorLike;

public abstract class TraceHandler {
  private Color aspect;

  public TraceHandler(Color aspect) {
    this.aspect = aspect;
  }

  protected abstract void write(DVector3C positions, float scale);

  protected abstract void vertices(ShapeRenderer ctx);

  public void render(DVector3C newPositions, float scale, VectorLike scaledOffset, boolean paused) {
    // Write new position
    if (!(paused)) {
      write(newPositions, scale);
    }

    // Display history
    ShapeRenderer renderer = new ShapeRenderer();

    renderer.translate(scaledOffset.getX().floatValue(), scaledOffset.getY().floatValue(), scaledOffset.getZ().floatValue());
    renderer.setColor(aspect.toGdxColor());
    renderer.begin(ShapeRenderer.ShapeType.Line);
    vertices(renderer);
    renderer.end();
    renderer.translate(-scaledOffset.getX().floatValue(), -scaledOffset.getY().floatValue(), -scaledOffset.getZ().floatValue());
  }
}
