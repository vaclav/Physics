package jetbrains.mps.samples.Physics.java.runtime.objects;

/*Generated by MPS */

import org.ode4j.math.DVector3C;
import org.ode4j.math.DVector3;

public class Math3DHelper {
  /**
   * Compute torque on object for a given force applied at some point
   * 
   * see https://en.wikipedia.org/wiki/Screw_theory
   */
  public static DVector3C computeTorque(DVector3C force, DVector3C relativeApplicationPoint) {
    double leverX = relativeApplicationPoint.get0();
    double leverY = relativeApplicationPoint.get1();
    double leverZ = relativeApplicationPoint.get2();

    // Mb = Ma + BA âˆ§ F with Ma = 0, BA above vector components and F the force 
    return new DVector3(leverY * force.get2() - leverZ * force.get1(), leverZ * force.get0() - leverX * force.get2(), leverX * force.get1() - leverY * force.get0());
  }


  /**
   * Apply the object rotation/position on the given vector
   */
  public static DVector3C relativePoint(PhysicalEntity object, DVector3C vector) {
    DVector3 result = new DVector3();
    object.getBody().getRelPointPos(vector, result);
    return result;
  }

}
