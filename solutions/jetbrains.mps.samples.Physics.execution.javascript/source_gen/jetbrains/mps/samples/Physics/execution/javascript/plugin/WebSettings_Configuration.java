package jetbrains.mps.samples.Physics.execution.javascript.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.IPersistentConfiguration;
import jetbrains.mps.project.structure.modules.Copyable;
import jetbrains.mps.execution.api.settings.PersistentConfigurationContext;
import com.intellij.execution.configurations.RuntimeConfigurationException;
import org.jdom.Element;
import com.intellij.openapi.util.WriteExternalException;
import com.intellij.openapi.util.InvalidDataException;

public final class WebSettings_Configuration implements IPersistentConfiguration, Copyable<WebSettings_Configuration> {

  @Override
  public void checkConfiguration(final PersistentConfigurationContext context) throws RuntimeConfigurationException {
  }
  @Override
  public void writeExternal(Element element) throws WriteExternalException {
  }

  @Override
  public void readExternal(Element element) throws InvalidDataException {
    if (element == null) {
      throw new InvalidDataException("Cant read " + this + ": element is null.");
    }
  }

  @Override
  @Deprecated
  public WebSettings_Configuration clone() {
    WebSettings_Configuration clone = createCloneTemplate();
    return clone;
  }

  @Override
  public WebSettings_Configuration copy() {
    WebSettings_Configuration cloneTemplate = createCloneTemplate();
    // beware, PersistenceConfiguration.this of newly created MyState instance would be the same as
    // the value of myState, and != clone as regular Java passer-by would expect.
    return cloneTemplate;
  }



  public WebSettings_Configuration() {
  }
  public WebSettings_Configuration createCloneTemplate() {
    return new WebSettings_Configuration();
  }
  public WebSettings_Configuration_Editor getEditor() {
    return new WebSettings_Configuration_Editor();
  }
}
