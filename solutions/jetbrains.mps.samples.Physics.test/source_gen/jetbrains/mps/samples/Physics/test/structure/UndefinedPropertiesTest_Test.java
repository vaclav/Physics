package jetbrains.mps.samples.Physics.test.structure;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Rule;
import jetbrains.mps.lang.test.runtime.RunWithCommand;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.project.ProjectBase;

@MPSLaunch
public class UndefinedPropertiesTest_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(UndefinedPropertiesTest_Test.class, "${project_home}", "r:0aef0149-b947-489c-9913-1dba741f6bbb(jetbrains.mps.samples.Physics.test.structure@tests)", false);
  @Rule
  public final RunWithCommand myWithCommandRule = new RunWithCommand(this);

  public UndefinedPropertiesTest_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_NodeAbstractConceptInstanceCheck911298080279481047() throws Throwable {
    new TestBody(this).test_NodeAbstractConceptInstanceCheck911298080279481047();
  }
  @Test
  public void test_NodeAbstractConceptInstanceCheck911298080278845010() throws Throwable {
    new TestBody(this).test_NodeAbstractConceptInstanceCheck911298080278845010();
  }
  @Test
  public void test_NodeAbstractConceptInstanceCheck911298080279481354() throws Throwable {
    new TestBody(this).test_NodeAbstractConceptInstanceCheck911298080279481354();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }


    public void test_NodeAbstractConceptInstanceCheck911298080279481047() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080279480770");
      SNode operation = getRealNodeById("911298080279481047");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)", "7283836008113027554"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeAbstractConceptInstanceCheck911298080278845010() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278845008");
      SNode operation = getRealNodeById("911298080278845010");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)", "7283836008113027554"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeAbstractConceptInstanceCheck911298080279481354() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080279481131");
      SNode operation = getRealNodeById("911298080279481354");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)", "7283836008113027554"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }

  }
}
