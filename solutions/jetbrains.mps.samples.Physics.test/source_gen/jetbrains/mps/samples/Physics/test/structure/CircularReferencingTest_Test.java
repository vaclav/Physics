package jetbrains.mps.samples.Physics.test.structure;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.ClassRule;
import jetbrains.mps.lang.test.runtime.TestParametersCache;
import org.junit.Rule;
import jetbrains.mps.lang.test.runtime.RunWithCommand;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.test.runtime.TransformationTest;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.test.runtime.CheckExpectedMessageRunnable;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.project.ProjectBase;

@MPSLaunch
public class CircularReferencingTest_Test extends BaseTransformationTest {
  @ClassRule
  public static final TestParametersCache ourParamCache = new TestParametersCache(CircularReferencingTest_Test.class, "${jetbrains.mps.samples.Physics.home}", "r:0aef0149-b947-489c-9913-1dba741f6bbb(jetbrains.mps.samples.Physics.test.structure@tests)", false);
  @Rule
  public final RunWithCommand myWithCommandRule = new RunWithCommand(this);

  public CircularReferencingTest_Test() {
    super(ourParamCache);
  }

  @Test
  public void test_NodeUnnamedErrorCheck911298080278844963() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844963();
  }
  @Test
  public void test_NodeUnnamedErrorCheck911298080278844967() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844967();
  }
  @Test
  public void test_NodeUnnamedErrorCheck6610288360169093255() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck6610288360169093255();
  }
  @Test
  public void test_NodeUnnamedErrorCheck911298080278844980() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844980();
  }
  @Test
  public void test_NodeUnnamedErrorCheck911298080278844984() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844984();
  }
  @Test
  public void test_NodeUnnamedErrorCheck796402062948276315() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck796402062948276315();
  }
  @Test
  public void test_NodeUnnamedErrorCheck911298080278844993() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844993();
  }
  @Test
  public void test_NodeUnnamedErrorCheck911298080278844995() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck911298080278844995();
  }
  @Test
  public void test_NodeUnnamedErrorCheck796402062948313648() throws Throwable {
    new TestBody(this).test_NodeUnnamedErrorCheck796402062948313648();
  }

  /*package*/ static class TestBody extends BaseTestBody {

    /*package*/ TestBody(TransformationTest owner) {
      super(owner);
    }

    public void test_NodeUnnamedErrorCheck911298080278844963() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844961");
      SNode operation = getRealNodeById("911298080278844963");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck911298080278844967() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844965");
      SNode operation = getRealNodeById("911298080278844967");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck6610288360169093255() throws Exception {
      SNode nodeToCheck = getRealNodeById("6610288360169093253");
      SNode operation = getRealNodeById("6610288360169093255");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck911298080278844980() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844978");
      SNode operation = getRealNodeById("911298080278844980");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck911298080278844984() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844982");
      SNode operation = getRealNodeById("911298080278844984");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck796402062948276315() throws Exception {
      SNode nodeToCheck = getRealNodeById("1655454202714778628");
      SNode operation = getRealNodeById("796402062948276315");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck911298080278844993() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844991");
      SNode operation = getRealNodeById("911298080278844993");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck911298080278844995() throws Exception {
      SNode nodeToCheck = getRealNodeById("911298080278844991");
      SNode operation = getRealNodeById("911298080278844995");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }
    public void test_NodeUnnamedErrorCheck796402062948313648() throws Exception {
      SNode nodeToCheck = getRealNodeById("4486016845505483951");
      SNode operation = getRealNodeById("796402062948313648");
      new CheckExpectedMessageRunnable.CheckExpectedRuleMessageRunnable(nodeToCheck, MessageStatus.ERROR, new SNodePointer("r:1b0f275e-bd62-4f6e-8c4b-51b05d651a63(com.mbeddr.core.base.typesystem)", "1283330125729692364"), "", myProject.getRepository(), ((ProjectBase) myProject).getPlatform()).run();
    }

  }
}
