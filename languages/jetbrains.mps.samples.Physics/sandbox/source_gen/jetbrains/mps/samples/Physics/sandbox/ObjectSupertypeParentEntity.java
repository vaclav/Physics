package jetbrains.mps.samples.Physics.sandbox;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.runtime.objects.ParentPhysicalEntity;
import jetbrains.mps.samples.Physics.runtime.objects.World;
import jetbrains.mps.samples.Physics.runtime.objects.PhysicalEntity;
import jetbrains.mps.samples.Physics.runtime.objects.rendering.BoxFixture;
import java.util.Arrays;
import jetbrains.mps.samples.Physics.runtime.objects.forces.StaticForce;
import jetbrains.mps.samples.Physics.runtime.vectors.InternalVector;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.math.BigInteger;

public class ObjectSupertypeParentEntity implements ParentPhysicalEntity {
  @Override
  public void applyOn(World world, PhysicalEntity target) {
    //  Apply parent 

    // Apply visual (mass of one, should be defined later) 
    target.setFixture(new BoxFixture(world, 4, 4, 4), 1);

    // Forces 
    target.getForces().addAll(Arrays.asList(new StaticForce(InternalVector.fromSpherical(((Number) new BigDecimal("1.5707963267948966").setScale(16, RoundingMode.DOWN)), ((Number) new BigDecimal("0.001111110653864079").setScale(18, RoundingMode.DOWN)), ((Number) new BigDecimal("900.0005555553840878973394160353825").setScale(31, RoundingMode.DOWN))).toDVector3C()), new StaticForce(new InternalVector(((Number) new BigInteger("44")), ((Number) new BigInteger("00")), ((Number) new BigInteger("4"))).toDVector3C())));
  }
}
