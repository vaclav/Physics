package jetbrains.mps.samples.Physics.sandbox;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.runtime.objects.forces.Force;
import jetbrains.mps.samples.Physics.java.runtime.objects.World;
import jetbrains.mps.samples.Physics.java.runtime.objects.SystemScope;
import jetbrains.mps.samples.Physics.java.runtime.objects.PhysicalEntity;
import org.ode4j.math.DVector3C;
import jetbrains.mps.samples.Physics.java.runtime.VectorHelper;
import jetbrains.mps.samples.Physics.java.common.vectors.InternalVector;

public class XYZForceForce {
  public static Force get(World world, SystemScope scope, PhysicalEntity currentEntity, double time, Number x, Number y, Number z) {
    Force force = new Force<SystemScope>() {

      @Override
      public DVector3C linearForce(World world, SystemScope scope, PhysicalEntity currentEntity, double time) {

        return VectorHelper.anyToDVector3C(new InternalVector(x, y, z));

      }
      @Override
      public DVector3C applicationPoint(World world, SystemScope scope, PhysicalEntity currentEntity, double time) {
        return null;
      }

      @Override
      public int forceMode() {
        return 0;
      }
    };
    return force;
  }
}
