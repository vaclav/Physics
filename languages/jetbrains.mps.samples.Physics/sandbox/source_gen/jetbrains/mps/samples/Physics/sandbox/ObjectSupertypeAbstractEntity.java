package jetbrains.mps.samples.Physics.sandbox;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.runtime.objects.SystemScope;
import jetbrains.mps.samples.Physics.runtime.objects.PhysicalEntity;
import jetbrains.mps.samples.Physics.runtime.objects.World;
import jetbrains.mps.samples.Physics.runtime.objects.rendering.BoxFixture;
import java.math.BigInteger;
import jetbrains.mps.samples.Physics.runtime.objects.rendering.Color;
import java.util.Arrays;
import jetbrains.mps.samples.Physics.runtime.objects.forces.StaticForce;
import jetbrains.mps.samples.Physics.runtime.vectors.InternalVector;
import java.math.BigDecimal;
import java.math.RoundingMode;
import org.iets3.core.expr.genjava.simpleTypes.rt.rt.AH;

public abstract class ObjectSupertypeAbstractEntity<T extends SystemScope> extends PhysicalEntity<T> {

  public ObjectSupertypeAbstractEntity(World world) {
    super(world);
  }


  @Override
  public void init(T scope, World world) {
    super.init(scope, world);

    // Escape this for nested forces 
    ObjectSupertypeAbstractEntity currentEntity = this;

    // Apply visual (mass of one, should be defined later) 
    this.setFixture(new BoxFixture(world, ((Number) new BigInteger("4")).doubleValue(), ((Number) new BigInteger("4")).doubleValue(), ((Number) new BigInteger("4")).doubleValue(), new Color(255, 255, 255)));

    // Forces 
    this.getForces().addAll(Arrays.asList(new StaticForce(new InternalVector(((Number) new BigDecimal("899.9999999999999").setScale(13, RoundingMode.DOWN)), ((Number) new BigDecimal("0.9999999999999999").setScale(16, RoundingMode.DOWN)), ((Number) new BigDecimal("5.510913997958703E-14").setScale(19, RoundingMode.DOWN))).toDVector3C()), new StaticForce(InternalVector.fromSpherical(AH.mul(((Number) new BigDecimal("0.47114206162369554").setScale(17, RoundingMode.DOWN)), BigDecimal.valueOf(Math.PI)), AH.mul(((Number) new BigDecimal("0.5").setScale(1, RoundingMode.DOWN)), BigDecimal.valueOf(Math.PI)), ((Number) new BigDecimal("44.1814440687490434227723411264442").setScale(31, RoundingMode.DOWN))).toDVector3C())));
  }
}
