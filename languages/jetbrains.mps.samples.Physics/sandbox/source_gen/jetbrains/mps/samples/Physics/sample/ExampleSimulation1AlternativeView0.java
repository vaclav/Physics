package jetbrains.mps.samples.Physics.sample;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.java.runtime.objects.World;
import jetbrains.mps.samples.Physics.java.runtime.objects.rendering.builder.Prop;
import jetbrains.mps.samples.Physics.java.runtime.objects.rendering.Color;
import jetbrains.mps.samples.Physics.java.common.vectors.VectorLike;
import processing.core.PGraphics;
import jetbrains.mps.samples.Physics.java.common.vectors.InternalVector;
import org.iets3.core.expr.genjava.simpleTypes.rt.rt.AH;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.math.BigInteger;

public class ExampleSimulation1AlternativeView0 extends ExampleSimulationSimulation {

  @Override
  protected void initScope(World world) {
    super.initScope(world);

    // Override properties 
    scope.EarthNested.Earth.getFixtureProperties().set(Prop.TRACE, new Color(0, 0, 255));
  }

  @Override
  public VectorLike getCameraPosition(PGraphics graphics) {
    VectorLike currentEntity = this.scope;

    return new InternalVector(AH.mul(((Number) new BigDecimal("300.e6").setScale(2, RoundingMode.DOWN)), ((Number) new BigDecimal("1E+3").setScale(0, RoundingMode.DOWN))), ((Number) new BigInteger("0")), ((Number) new BigInteger("0")));
  }

  @Override
  public VectorLike getCameraFocus(PGraphics graphics) {
    VectorLike currentEntity = this.scope;

    return scope.Sun;
  }

}
