package jetbrains.mps.samples.Physics.sandbox;

/*Generated by MPS */

import jetbrains.mps.sample.Physics.runtime.Simulation;
import jetbrains.mps.sample.Physics.runtime.objects.World;
import jetbrains.mps.sample.Physics.runtime.objects.PhysicalEntity;
import org.ode4j.math.DVector3;
import java.math.BigInteger;
import jetbrains.mps.sample.Physics.runtime.objects.rendering.BoxFixture;
import java.util.Arrays;
import jetbrains.mps.sample.Physics.runtime.objects.forces.Force;
import jetbrains.mps.sample.Physics.runtime.objects.forces.StaticForce;

public class TestSimulation extends Simulation {

  @Override
  protected void init(World world) {
    PhysicalEntity Something = new PhysicalEntity(world);
    Something.getBody().setPosition(null);
    Something.getBody().setLinearVel(new DVector3(((Number) new BigInteger("20")), ((Number) new BigInteger("20")), ((Number) new BigInteger("20"))));
    Something.setFixture(new BoxFixture(world, 2, 2, 2), ((Number) new BigInteger("20")));
    Something.getForces().addAll(Arrays.asList(new Force[]{new StaticForce(new DVector3(((Number) new BigInteger("2")), ((Number) new BigInteger("2")), ((Number) new BigInteger("2")))), new StaticForce(new DVector3(((Number) new BigInteger("400")), ((Number) new BigInteger("1")), ((Number) new BigInteger("0")))), new StaticForce(new DVector3(((Number) new BigInteger("44")), ((Number) new BigInteger("00")), ((Number) new BigInteger("4"))))}));
  }
}
