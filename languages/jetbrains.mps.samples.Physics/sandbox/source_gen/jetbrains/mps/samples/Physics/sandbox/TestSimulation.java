package jetbrains.mps.samples.Physics.sandbox;

/*Generated by MPS */

import jetbrains.mps.samples.Physics.runtime.Simulation;
import jetbrains.mps.samples.Physics.runtime.objects.World;
import jetbrains.mps.samples.Physics.runtime.objects.PhysicalEntity;
import jetbrains.mps.samples.Physics.runtime.vectors.InternalVector;
import java.math.BigInteger;
import org.iets3.core.expr.genjava.simpleTypes.rt.rt.AH;
import java.util.Arrays;
import java.math.BigDecimal;
import java.math.RoundingMode;
import jetbrains.mps.samples.Physics.runtime.objects.rendering.BoxFixture;
import jetbrains.mps.samples.Physics.runtime.Renderer;

public class TestSimulation extends Simulation {

  @Override
  protected void init(World world) {
    PhysicalEntity Sun = new PhysicalEntity(world);
    PhysicalEntity Mercury = new PhysicalEntity(world);
    PhysicalEntity Venus = new PhysicalEntity(world);
    PhysicalEntity Earth = new PhysicalEntity(world);
    PhysicalEntity Moon = new PhysicalEntity(world);
    PhysicalEntity Mars = new PhysicalEntity(world);
    new PlanetParentEntity().applyOn(world, Sun);
    Sun.getBody().setPosition(new InternalVector(((Number) new BigInteger("0")), ((Number) new BigInteger("0")), ((Number) new BigInteger("0"))).toDVector3C());
    Sun.setMass(AH.add(AH.add(AH.add(((Number) new BigInteger("400")), ((Number) new BigInteger("5"))), ((Number) new BigInteger("9"))), (((BigInteger) AH.mul(((Number) new BigInteger("96")), ((Number) new BigInteger("8")))).mod((BigInteger) ((Number) new BigInteger("4"))))));
    Sun.getForces().addAll(Arrays.asList());
    world.addEntity(Sun);
    new PlanetParentEntity().applyOn(world, Mercury);
    Mercury.getBody().setPosition(new InternalVector(((Number) new BigInteger("55511")), ((Number) new BigInteger("6")), ((Number) new BigInteger("7"))).toDVector3C());
    Mercury.setMass(((Number) new BigInteger("10")));
    Mercury.getForces().addAll(Arrays.asList());
    world.addEntity(Mercury);
    new PlanetParentEntity().applyOn(world, Venus);
    Venus.getBody().setPosition(new InternalVector(((Number) new BigDecimal("-270.05928892065526").setScale(14, RoundingMode.DOWN)), ((Number) new BigDecimal("38.496018060737015").setScale(15, RoundingMode.DOWN)), ((Number) new BigDecimal("-124.84405096414272").setScale(14, RoundingMode.DOWN))).toDVector3C());
    Venus.getBody().setLinearVel(new InternalVector(((Number) new BigInteger("3")), ((Number) new BigInteger("3")), ((Number) new BigInteger("3"))).toDVector3C());
    Venus.setMass(((Number) new BigInteger("200")));
    Venus.getForces().addAll(Arrays.asList());
    world.addEntity(Venus);
    new PlanetParentEntity().applyOn(world, Earth);
    Earth.getBody().setPosition(new InternalVector(((Number) new BigDecimal("-2.4492935982947065E-13").setScale(20, RoundingMode.DOWN)), ((Number) new BigDecimal("2.9995195653237156E-29").setScale(20, RoundingMode.DOWN)), ((Number) new BigDecimal("-400.0").setScale(1, RoundingMode.DOWN))).toDVector3C());
    Earth.getBody().setLinearVel(new InternalVector(((Number) new BigInteger("5")), ((Number) new BigInteger("1")), ((Number) new BigInteger("1"))).toDVector3C());
    Earth.setMass(((Number) new BigInteger("300")));
    Earth.getForces().addAll(Arrays.asList());
    world.addEntity(Earth);
    new PlanetParentEntity().applyOn(world, Moon);
    Moon.getBody().setPosition(new InternalVector(((Number) new BigDecimal("-54.40211108893722492935982947065").setScale(29, RoundingMode.DOWN)), ((Number) new BigDecimal("183.9071529076452400000000000000300").setScale(31, RoundingMode.DOWN)), ((Number) new BigDecimal("-343.26756290735475").setScale(14, RoundingMode.DOWN))).toDVector3C());
    Moon.getBody().setLinearVel(new InternalVector(((Number) new BigDecimal("11.24540194428703135719756309290047").setScale(32, RoundingMode.DOWN)), ((Number) new BigDecimal("-42.63085266581038831708044514806031").setScale(32, RoundingMode.DOWN)), ((Number) new BigDecimal("-9.008403637570463726142151882775526").setScale(33, RoundingMode.DOWN))).toDVector3C());
    Moon.setFixture(new BoxFixture(world, ((Number) new BigInteger("4")).doubleValue(), ((Number) new BigInteger("4")).doubleValue(), ((Number) new BigInteger("4")).doubleValue()), ((Number) new BigInteger("50")));
    Moon.getForces().addAll(Arrays.asList());
    world.addEntity(Moon);
    new PlanetParentEntity().applyOn(world, Mars);
    Mars.getBody().setPosition(new InternalVector(((Number) new BigDecimal("-58.70883489445973").setScale(14, RoundingMode.DOWN)), ((Number) new BigDecimal("-95.09511422778161").setScale(14, RoundingMode.DOWN)), ((Number) new BigDecimal("-165.86196657263002").setScale(14, RoundingMode.DOWN))).toDVector3C());
    Mars.setMass(((Number) new BigInteger("30")));
    Mars.getForces().addAll(Arrays.asList());
    world.addEntity(Mars);
  }

  public static void main(String[] args) {
    Renderer.afterInit(new TestSimulation());
    Renderer.main(args);
  }
}
