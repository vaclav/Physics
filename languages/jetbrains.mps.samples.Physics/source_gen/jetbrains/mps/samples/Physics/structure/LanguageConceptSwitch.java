package jetbrains.mps.samples.Physics.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbsoluteCoordinates = 0;
  public static final int AbstractForce = 1;
  public static final int AbstractForceCall = 2;
  public static final int AbstractForceCallParameter = 3;
  public static final int AbstractObjectDefinition = 4;
  public static final int AbstractObjectReference = 5;
  public static final int AbstractVectorTarget = 6;
  public static final int AllObjectsExpression = 7;
  public static final int BooleanStyleKey = 8;
  public static final int BoxDepthStyle = 9;
  public static final int BoxHeightStyle = 10;
  public static final int BoxWidthStyle = 11;
  public static final int CartesianCoordinates = 12;
  public static final int CollisionReactionExpression = 13;
  public static final int CollisionStyleKey = 14;
  public static final int ColorDefinition = 15;
  public static final int Coordinates = 16;
  public static final int CurrentObjectExpression = 17;
  public static final int CurrentWorldExpression = 18;
  public static final int CustomColorTexture = 19;
  public static final int CylindricalCoordinates = 20;
  public static final int DefinedColorReference = 21;
  public static final int DirectionalCoordinates = 22;
  public static final int DisabledTraceExpression = 23;
  public static final int DynamicForce = 24;
  public static final int EmitLightStyleKey = 25;
  public static final int Force = 26;
  public static final int ForceApplicationPointTarget = 27;
  public static final int ForceComponentsTarget = 28;
  public static final int ICanBeOverridden = 29;
  public static final int IForceDotTarget = 30;
  public static final int ILocalized = 31;
  public static final int IMayTargetWorld = 32;
  public static final int IObjectDefinition = 33;
  public static final int IObjectDotTarget = 34;
  public static final int IOverrideProperties = 35;
  public static final int IProvideCurrentWorld = 36;
  public static final int ITargetExpression = 37;
  public static final int ITargetObject = 38;
  public static final int IUseSpecificExpressions = 39;
  public static final int IUseStyleExpressions = 40;
  public static final int IWorldDotTarget = 41;
  public static final int InteractedObjectExpression = 42;
  public static final int InteractionForce = 43;
  public static final int MomentForce = 44;
  public static final int NumericDistanceStyleKey = 45;
  public static final int ObjectDefinition = 46;
  public static final int ObjectDistanceWithTarget = 47;
  public static final int ObjectMassTarget = 48;
  public static final int ObjectPositionTarget = 49;
  public static final int ObjectReferenceExpression = 50;
  public static final int ObjectStyleDotTarget = 51;
  public static final int ObjectVelocityTarget = 52;
  public static final int OverrideRule = 53;
  public static final int PictureTexture = 54;
  public static final int PositionCoordinates = 55;
  public static final int RelativeCoordinates = 56;
  public static final int ShapeStyleExpression = 57;
  public static final int ShapeStyleKey = 58;
  public static final int SimpleForce = 59;
  public static final int Simulation = 60;
  public static final int SimulationAlternativeView = 61;
  public static final int SphereRadiusStyle = 62;
  public static final int SphericalCoordinates = 63;
  public static final int StatefulForce = 64;
  public static final int StaticForce = 65;
  public static final int StyleDefinition = 66;
  public static final int StyleKey = 67;
  public static final int StyleSpecificExpression = 68;
  public static final int TargetableObjectExpression = 69;
  public static final int TextureExpression = 70;
  public static final int TextureStyleKey = 71;
  public static final int TimeExpression = 72;
  public static final int TraceStyleKey = 73;
  public static final int VectorComponentTarget = 74;
  public static final int VectorOppositeTarget = 75;
  public static final int VectorResizeTarget = 76;
  public static final int VelocityCoordinates = 77;
  public static final int WorldDefinition = 78;
  public static final int WorldInclusion = 79;
  public static final int WorldMassCenterTarget = 80;
  public static final int WorldNestedObjectTarget = 81;
  public static final int WorldReference = 82;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbe81eb124eda4d0eL, 0x89be7493500ab874L);
    builder.put(0x584bed834752fa6dL, AbsoluteCoordinates);
    builder.put(0x3126c7c72470af86L, AbstractForce);
    builder.put(0x14f63a14438be6a0L, AbstractForceCall);
    builder.put(0xd84d5bfb280c701L, AbstractForceCallParameter);
    builder.put(0x1441545e2a5b1e43L, AbstractObjectDefinition);
    builder.put(0x1441545e2a5b1e44L, AbstractObjectReference);
    builder.put(0x306daaa2cbe2552aL, AbstractVectorTarget);
    builder.put(0x89beb4790d87a7fL, AllObjectsExpression);
    builder.put(0x50940c24621193eL, BooleanStyleKey);
    builder.put(0x101711d6977a7099L, BoxDepthStyle);
    builder.put(0x101711d6977a7398L, BoxHeightStyle);
    builder.put(0x101711d6977a7397L, BoxWidthStyle);
    builder.put(0x584bed834752fa8bL, CartesianCoordinates);
    builder.put(0x2b1dfd95e2d94529L, CollisionReactionExpression);
    builder.put(0x298a87ff7e3fd75dL, CollisionStyleKey);
    builder.put(0xb06f5069ab7502eL, ColorDefinition);
    builder.put(0x14f63a1443864979L, Coordinates);
    builder.put(0x339d8f0ab547716L, CurrentObjectExpression);
    builder.put(0x22ff7dd8e3ba6db5L, CurrentWorldExpression);
    builder.put(0x14f63a14438863e1L, CustomColorTexture);
    builder.put(0xb0d6374ec996951L, CylindricalCoordinates);
    builder.put(0x1441545e2a5b1e65L, DefinedColorReference);
    builder.put(0x6d74ae1e883a4471L, DirectionalCoordinates);
    builder.put(0x19a1be2f7ee8fc21L, DisabledTraceExpression);
    builder.put(0x1441545e2a580635L, DynamicForce);
    builder.put(0x50940c24621144cL, EmitLightStyleKey);
    builder.put(0x1441545e2a58062fL, Force);
    builder.put(0x78d08d83b98a8e76L, ForceApplicationPointTarget);
    builder.put(0x78d08d83b98a73b5L, ForceComponentsTarget);
    builder.put(0x3238375e772f9f4dL, ICanBeOverridden);
    builder.put(0x78d08d83b98a634eL, IForceDotTarget);
    builder.put(0x3cd406ea6df3fe05L, ILocalized);
    builder.put(0x22ff7dd8e3c8bd76L, IMayTargetWorld);
    builder.put(0x3cd406ea6def9fa4L, IObjectDefinition);
    builder.put(0x43a656410180f6c1L, IObjectDotTarget);
    builder.put(0x5820d9a6fbf7a539L, IOverrideProperties);
    builder.put(0x22ff7dd8e3c8f846L, IProvideCurrentWorld);
    builder.put(0xb0d6374ec7d87e1L, ITargetExpression);
    builder.put(0xb0d6374ec6d3ff3L, ITargetObject);
    builder.put(0x19a1be2f7ef2e456L, IUseSpecificExpressions);
    builder.put(0x19a1be2f7ef8d4deL, IUseStyleExpressions);
    builder.put(0x43a6564101814135L, IWorldDotTarget);
    builder.put(0x339d8f0ab4d9124L, InteractedObjectExpression);
    builder.put(0x339d8f0ab4d56baL, InteractionForce);
    builder.put(0x4dc483d31ef92c33L, MomentForce);
    builder.put(0x101711d6977a709aL, NumericDistanceStyleKey);
    builder.put(0x6b7f605cb3278f43L, ObjectDefinition);
    builder.put(0x339d8f0ab560d03L, ObjectDistanceWithTarget);
    builder.put(0x6520d39c95047fcaL, ObjectMassTarget);
    builder.put(0x6520d39c9504a71bL, ObjectPositionTarget);
    builder.put(0x6b7f605cb32fba5bL, ObjectReferenceExpression);
    builder.put(0x29b2190b93c8e27bL, ObjectStyleDotTarget);
    builder.put(0x4a4717912b4b2f7eL, ObjectVelocityTarget);
    builder.put(0x3238375e772f9fedL, OverrideRule);
    builder.put(0x14f63a144388655eL, PictureTexture);
    builder.put(0xb0d6374ec7d87dcL, PositionCoordinates);
    builder.put(0x584bed834752fa6bL, RelativeCoordinates);
    builder.put(0x2b1dfd95e2ddf664L, ShapeStyleExpression);
    builder.put(0x101711d69774a67aL, ShapeStyleKey);
    builder.put(0x78d08d83b98d8960L, SimpleForce);
    builder.put(0x6b7f605cb32fba58L, Simulation);
    builder.put(0x5820d9a6fbf789f4L, SimulationAlternativeView);
    builder.put(0x101711d6977a7399L, SphereRadiusStyle);
    builder.put(0x584bed834752fa8fL, SphericalCoordinates);
    builder.put(0x1441545e2a580636L, StatefulForce);
    builder.put(0x1441545e2a580632L, StaticForce);
    builder.put(0x101711d69774a425L, StyleDefinition);
    builder.put(0x2b1dfd95e2c40d23L, StyleKey);
    builder.put(0x19a1be2f7eedde85L, StyleSpecificExpression);
    builder.put(0xb0d6374ec7f738eL, TargetableObjectExpression);
    builder.put(0x1441545e2a5b1e64L, TextureExpression);
    builder.put(0x101711d69774b3a0L, TextureStyleKey);
    builder.put(0xca594c697a70d0aL, TimeExpression);
    builder.put(0x19a1be2f7ee8f855L, TraceStyleKey);
    builder.put(0x6520d39c9504b3d7L, VectorComponentTarget);
    builder.put(0x339d8f0ab6a0bccL, VectorOppositeTarget);
    builder.put(0x306daaa2cbe24f94L, VectorResizeTarget);
    builder.put(0xb0d6374ec7f738bL, VelocityCoordinates);
    builder.put(0x6b7f605cb3278f40L, WorldDefinition);
    builder.put(0x3cd406ea6df343a0L, WorldInclusion);
    builder.put(0x6520d39c9504a750L, WorldMassCenterTarget);
    builder.put(0x22ff7dd8e3878c9cL, WorldNestedObjectTarget);
    builder.put(0x5d5cbb75843c860L, WorldReference);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
