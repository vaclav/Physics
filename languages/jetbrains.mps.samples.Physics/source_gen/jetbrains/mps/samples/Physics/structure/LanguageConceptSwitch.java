package jetbrains.mps.samples.Physics.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbsoluteCoordinates = 0;
  public static final int AbstractForce = 1;
  public static final int AbstractForceArgument = 2;
  public static final int AbstractForceCall = 3;
  public static final int AbstractForceCallParameter = 4;
  public static final int AbstractObjectDefinition = 5;
  public static final int AbstractObjectReference = 6;
  public static final int AbstractObjectTarget = 7;
  public static final int AbstractVectorTarget = 8;
  public static final int AbstractWorldTarget = 9;
  public static final int BoxVisual = 10;
  public static final int CartesianCoordinates = 11;
  public static final int ColorDefinition = 12;
  public static final int Coordinates = 13;
  public static final int CurrentObjectExpression = 14;
  public static final int CustomColorTexture = 15;
  public static final int CylindricalCoordinates = 16;
  public static final int DefinedColorReference = 17;
  public static final int DirectionType_old = 18;
  public static final int DirectionalCoordinates = 19;
  public static final int DynamicForce = 20;
  public static final int Force = 21;
  public static final int ForceType_old = 22;
  public static final int ILocalized = 23;
  public static final int IObjectDefinition = 24;
  public static final int ITargetExpression = 25;
  public static final int ITargetObject = 26;
  public static final int InteractedObjectExpression = 27;
  public static final int InteractionForce = 28;
  public static final int ObjectDefinition = 29;
  public static final int ObjectDistanceWithTarget = 30;
  public static final int ObjectMassTarget = 31;
  public static final int ObjectPositionTarget = 32;
  public static final int ObjectReference = 33;
  public static final int ObjectType_old = 34;
  public static final int ObjectVelocityTarget = 35;
  public static final int PictureTexture = 36;
  public static final int PositionCoordinates = 37;
  public static final int RelativeCoordinates = 38;
  public static final int Simulation = 39;
  public static final int SphereVisual = 40;
  public static final int SphericalCoordinates = 41;
  public static final int StatefulForce = 42;
  public static final int StaticForce = 43;
  public static final int TargetableExpression = 44;
  public static final int Texture = 45;
  public static final int TimeExpression = 46;
  public static final int UnitProviderChunk = 47;
  public static final int VectorComponentTarget = 48;
  public static final int VectorOppositeTarget = 49;
  public static final int VectorResizeTarget = 50;
  public static final int VectorType_old = 51;
  public static final int VelocityCoordinates = 52;
  public static final int Visual = 53;
  public static final int WorldDefinition = 54;
  public static final int WorldInclusion = 55;
  public static final int WorldMassCenterTarget = 56;
  public static final int WorldReference = 57;
  public static final int WorldType_old = 58;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbe81eb124eda4d0eL, 0x89be7493500ab874L);
    builder.put(0x584bed834752fa6dL, AbsoluteCoordinates);
    builder.put(0x3126c7c72470af86L, AbstractForce);
    builder.put(0x6520d39c94f34b64L, AbstractForceArgument);
    builder.put(0x14f63a14438be6a0L, AbstractForceCall);
    builder.put(0xd84d5bfb280c701L, AbstractForceCallParameter);
    builder.put(0x1441545e2a5b1e43L, AbstractObjectDefinition);
    builder.put(0x1441545e2a5b1e44L, AbstractObjectReference);
    builder.put(0x6520d39c950477d4L, AbstractObjectTarget);
    builder.put(0x306daaa2cbe2552aL, AbstractVectorTarget);
    builder.put(0x6520d39c95049f47L, AbstractWorldTarget);
    builder.put(0x1441545e2a5b1e58L, BoxVisual);
    builder.put(0x584bed834752fa8bL, CartesianCoordinates);
    builder.put(0xb06f5069ab7502eL, ColorDefinition);
    builder.put(0x14f63a1443864979L, Coordinates);
    builder.put(0x339d8f0ab547716L, CurrentObjectExpression);
    builder.put(0x14f63a14438863e1L, CustomColorTexture);
    builder.put(0xb0d6374ec996951L, CylindricalCoordinates);
    builder.put(0x1441545e2a5b1e65L, DefinedColorReference);
    builder.put(0x6520d39c950a1448L, DirectionType_old);
    builder.put(0x6d74ae1e883a4471L, DirectionalCoordinates);
    builder.put(0x1441545e2a580635L, DynamicForce);
    builder.put(0x1441545e2a58062fL, Force);
    builder.put(0x1be152c15029f679L, ForceType_old);
    builder.put(0x3cd406ea6df3fe05L, ILocalized);
    builder.put(0x3cd406ea6def9fa4L, IObjectDefinition);
    builder.put(0xb0d6374ec7d87e1L, ITargetExpression);
    builder.put(0xb0d6374ec6d3ff3L, ITargetObject);
    builder.put(0x339d8f0ab4d9124L, InteractedObjectExpression);
    builder.put(0x339d8f0ab4d56baL, InteractionForce);
    builder.put(0x6b7f605cb3278f43L, ObjectDefinition);
    builder.put(0x339d8f0ab560d03L, ObjectDistanceWithTarget);
    builder.put(0x6520d39c95047fcaL, ObjectMassTarget);
    builder.put(0x6520d39c9504a71bL, ObjectPositionTarget);
    builder.put(0x6b7f605cb32fba5bL, ObjectReference);
    builder.put(0x6520d39c9501de46L, ObjectType_old);
    builder.put(0x4a4717912b4b2f7eL, ObjectVelocityTarget);
    builder.put(0x14f63a144388655eL, PictureTexture);
    builder.put(0xb0d6374ec7d87dcL, PositionCoordinates);
    builder.put(0x584bed834752fa6bL, RelativeCoordinates);
    builder.put(0x6b7f605cb32fba58L, Simulation);
    builder.put(0x1441545e2a5b1e57L, SphereVisual);
    builder.put(0x584bed834752fa8fL, SphericalCoordinates);
    builder.put(0x1441545e2a580636L, StatefulForce);
    builder.put(0x1441545e2a580632L, StaticForce);
    builder.put(0xb0d6374ec7f738eL, TargetableExpression);
    builder.put(0x1441545e2a5b1e64L, Texture);
    builder.put(0xca594c697a70d0aL, TimeExpression);
    builder.put(0x765c880a454f5efbL, UnitProviderChunk);
    builder.put(0x6520d39c9504b3d7L, VectorComponentTarget);
    builder.put(0x339d8f0ab6a0bccL, VectorOppositeTarget);
    builder.put(0x306daaa2cbe24f94L, VectorResizeTarget);
    builder.put(0x6520d39c9504aaffL, VectorType_old);
    builder.put(0xb0d6374ec7f738bL, VelocityCoordinates);
    builder.put(0x1441545e2a5b1e50L, Visual);
    builder.put(0x6b7f605cb3278f40L, WorldDefinition);
    builder.put(0x3cd406ea6df343a0L, WorldInclusion);
    builder.put(0x6520d39c9504a750L, WorldMassCenterTarget);
    builder.put(0x5d5cbb75843c860L, WorldReference);
    builder.put(0x6520d39c9501de47L, WorldType_old);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
