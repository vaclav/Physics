package jetbrains.mps.samples.Physics.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.samples.Physics.plugin.InternalVector;
import org.iets3.core.expr.base.behavior.IETS3ExprEvalHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public final class MakeAbsolute_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public MakeAbsolute_Intention() {
    super(Kind.NORMAL, true, new SNodePointer("r:d39af7f4-ee25-4f0f-8cf6-c31288d9a059(jetbrains.mps.samples.Physics.intentions)", "1808378526641952102"));
  }
  @Override
  public String getPresentation() {
    return "MakeAbsolute";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (editorContext.getSelectedNode() != node && !(isVisibleInChild(node, editorContext.getSelectedNode(), editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isVisibleInChild(final SNode node, final SNode childNode, final EditorContext editorContext) {
    return SNodeOperations.isInstanceOf(childNode, CONCEPTS.Coordinates$HV);
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Tranform " + SConceptOperations.conceptAlias(SNodeOperations.getConcept(SLinkOperations.getTarget(node, LINKS.coordinates$l1nt))) + " into absolute cartesian coordinates";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      // Somehow not working silently 
      InternalVector result = (InternalVector) IETS3ExprEvalHelper.evaluate(node);
      SNode newNode = SNodeOperations.replaceWithNewChild(node, CONCEPTS.CartesianCoordinates$U8);

      SLinkOperations.setTarget(newNode, LINKS.dx$VpuT, createNumberLiteral_ql4edu_a0e0a());
      SPropertyOperations.assign(SNodeOperations.cast(SLinkOperations.getTarget(newNode, LINKS.dx$VpuT), CONCEPTS.NumberLiteral$yW), PROPS.value$nZyY, result.x.toString());

      SLinkOperations.setTarget(newNode, LINKS.dy$VWrJ, createNumberLiteral_ql4edu_a0h0a());
      SPropertyOperations.assign(SNodeOperations.cast(SLinkOperations.getTarget(newNode, LINKS.dy$VWrJ), CONCEPTS.NumberLiteral$yW), PROPS.value$nZyY, result.y.toString());

      SLinkOperations.setTarget(newNode, LINKS.dz$VWBn, createNumberLiteral_ql4edu_a0k0a());
      SPropertyOperations.assign(SNodeOperations.cast(SLinkOperations.getTarget(newNode, LINKS.dz$VWBn), CONCEPTS.NumberLiteral$yW), PROPS.value$nZyY, result.z.toString());
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return MakeAbsolute_Intention.this;
    }
  }
  private static SNode createNumberLiteral_ql4edu_a0e0a() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.NumberLiteral$yW);
    return n0.getResult();
  }
  private static SNode createNumberLiteral_ql4edu_a0h0a() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.NumberLiteral$yW);
    return n0.getResult();
  }
  private static SNode createNumberLiteral_ql4edu_a0k0a() {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.NumberLiteral$yW);
    return n0.getResult();
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Coordinates$HV = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a1443864979L, "jetbrains.mps.samples.Physics.structure.Coordinates");
    /*package*/ static final SConcept CartesianCoordinates$U8 = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, "jetbrains.mps.samples.Physics.structure.CartesianCoordinates");
    /*package*/ static final SConcept NumberLiteral$yW = MetaAdapterFactory.getConcept(0x6b277d9ad52d416fL, 0xa2091919bd737f50L, 0x46ff3b3d86d0e6daL, "org.iets3.core.expr.simpleTypes.structure.NumberLiteral");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink coordinates$l1nt = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa6bL, 0x1918a6b053ddd35aL, "coordinates");
    /*package*/ static final SContainmentLink dx$VpuT = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a580637L, "dx");
    /*package*/ static final SContainmentLink dy$VWrJ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a5807eeL, "dy");
    /*package*/ static final SContainmentLink dz$VWBn = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a5807f1L, "dz");
  }

  private static final class PROPS {
    /*package*/ static final SProperty value$nZyY = MetaAdapterFactory.getProperty(0x6b277d9ad52d416fL, 0xa2091919bd737f50L, 0x46ff3b3d86d0e6daL, 0x46ff3b3d86d0e6ddL, "value");
  }
}
