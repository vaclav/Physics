package jetbrains.mps.samples.Physics.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.samples.Physics.dimensions.typesystem.NumberTypeHelper;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_YawPitchRollExpression_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_YawPitchRollExpression_InferenceRule() {
  }
  public void applyRule(final SNode self, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      final SNode yawType = typeCheckingContext.typeOf(SLinkOperations.getTarget(self, LINKS.yaw$XgMY), "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268762", true);
      typeCheckingContext.whenConcrete(yawType, new Runnable() {
        public void run() {
          {
            final SNode pitchType = typeCheckingContext.typeOf(SLinkOperations.getTarget(self, LINKS.pitch$XgM0), "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268756", true);
            typeCheckingContext.whenConcrete(pitchType, new Runnable() {
              public void run() {
                {
                  final SNode rollType = typeCheckingContext.typeOf(SLinkOperations.getTarget(self, LINKS.roll$Xh3s), "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268750", true);
                  typeCheckingContext.whenConcrete(rollType, new Runnable() {
                    public void run() {
                      {
                        SNode _nodeToCheck_1029348928467 = self;
                        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268718", 0, null);
                        typeCheckingContext.createComparableEquation((SNode) typeCheckingContext.getExpandedNode(yawType), (SNode) typeCheckingContext.getExpandedNode(pitchType), false, _info_12389875345);
                      }
                      {
                        SNode _nodeToCheck_1029348928467 = self;
                        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268727", 0, null);
                        typeCheckingContext.createComparableEquation((SNode) typeCheckingContext.getExpandedNode(yawType), (SNode) typeCheckingContext.getExpandedNode(rollType), false, _info_12389875345);
                      }

                      {
                        SNode _nodeToCheck_1029348928467 = self;
                        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268737", 0, null);
                        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268748", true), (SNode) createRotationType_j1wshx_a1a0c0d0a0a1a0b0a0a0a1a0b0a0a0a1a0b0a0b(NumberTypeHelper.approximateToDimensions(typeCheckingContext.getExpandedNode(yawType), typeCheckingContext.getExpandedNode(pitchType), typeCheckingContext.getExpandedNode(rollType))), _info_12389875345);
                      }
                    }
                  }, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268716", false, false);
                }
              }
            }, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268714", false, false);
          }
        }
      }, "r:34dc5c2b-d71f-4a9a-9011-74cd28ad1a10(jetbrains.mps.samples.Physics.typesystem)", "5605746806660268712", false, false);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.YawPitchRollExpression$gs;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createRotationType_j1wshx_a1a0c0d0a0a1a0b0a0a0a1a0b0a0a0a1a0b0a0b(SNode p0) {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.RotationType$YX);
    n0.forChild(LINKS.nestedType$w52B).initNode(p0, CONCEPTS.Type$fA, true);
    return n0.getResult();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink yaw$XgMY = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c4004aL, "yaw");
    /*package*/ static final SContainmentLink pitch$XgM0 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c40048L, "pitch");
    /*package*/ static final SContainmentLink roll$Xh3s = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c40057L, "roll");
    /*package*/ static final SContainmentLink nestedType$w52B = MetaAdapterFactory.getContainmentLink(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, 0x4dcb9d0527c228a6L, 0x777af24c0465feb3L, "nestedType");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept YawPitchRollExpression$gs = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, "jetbrains.mps.samples.Physics.structure.YawPitchRollExpression");
    /*package*/ static final SConcept RotationType$YX = MetaAdapterFactory.getConcept(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, 0x4dcb9d0527c228a6L, "jetbrains.mps.samples.Physics.types.structure.RotationType");
    /*package*/ static final SConcept Type$fA = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a614L, "org.iets3.core.expr.base.structure.Type");
  }
}
