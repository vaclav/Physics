package jetbrains.mps.samples.Physics.findUsages;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.findalgorithm.finders.GeneratedFinder;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.ide.findusages.findalgorithm.finders.IFinder;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import jetbrains.mps.samples.Physics.behavior.ICanBeOverridden__BehaviorDescriptor;
import jetbrains.mps.samples.Physics.behavior.OverrideRule__BehaviorDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class FindOverridenValue_Finder extends GeneratedFinder {
  public FindOverridenValue_Finder() {
  }
  @Override
  public String getDescription() {
    return "Overridden Value";
  }
  @Override
  public String getLongDescription() {
    return "";
  }
  @Override
  public SAbstractConcept getSConcept() {
    return CONCEPTS.OverrideRule$lC;
  }

  @Override
  protected void doFind0(@NotNull SNode node, SearchScope scope, IFinder.FindCallback callback, ProgressMonitor monitor) {
    monitor.start(getDescription(), 0);
    try {
      SNode valueTarget = ICanBeOverridden__BehaviorDescriptor.getNodeTarget_id6ZPff_L2lbX.invoke(OverrideRule__BehaviorDescriptor.getTarget_id2AM6gIjLTgY.invoke(node));
      if ((valueTarget != null)) {
        callback.onUsageFound(createSingleResult(valueTarget));
      }
    } finally {
      monitor.done();
    }
  }

  @Override
  public String getNodeCategory(SNode node) {
    return "Overridden Value";
  }

  @Nullable
  @Override
  public SNodeReference getDeclarationNode() {
    return buildNodePointer(FindUsagesDescriptor.DECLARING_MODEL, "8067421349545066944");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept OverrideRule$lC = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3238375e772f9fedL, "jetbrains.mps.samples.Physics.structure.OverrideRule");
  }
}
