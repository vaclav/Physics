package jetbrains.mps.samples.Physics.resolver;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;
import org.iets3.core.expr.base.behavior.IETS3ExprEvalHelper;
import jetbrains.mps.internal.collections.runtime.ILeftCombinator;

public class ObjectToPosition {
  private SNode content;
  private List<ObjectToPosition> dependencies;
  private boolean resolved = false;
  private SNode result;

  public ObjectToPosition(SNode object) {
    content = object;
    dependencies = ListSequence.fromList(new LinkedList<ObjectToPosition>());
  }

  public void resolve() {
    IETS3ExprEvalHelper.getInterpreter();
  }

  public int missingDependencies() {
    return ListSequence.fromList(dependencies).foldLeft(0, new ILeftCombinator<ObjectToPosition, Integer>() {
      public Integer combine(Integer s, ObjectToPosition it) {
        return (it.resolved ? s : s + 1);
      }
    });
  }

  public SNode getContent() {
    return this.content;
  }
  public List<ObjectToPosition> getDependencies() {
    return this.dependencies;
  }
  public boolean isResolved() {
    return this.resolved;
  }
}
