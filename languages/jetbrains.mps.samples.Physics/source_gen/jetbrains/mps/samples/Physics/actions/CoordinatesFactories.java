package jetbrains.mps.samples.Physics.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.samples.Physics.runtime.vectors.InternalVector;
import jetbrains.mps.samples.Physics.plugin.CoordinateExpressionConverters;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class CoordinatesFactories {
  public static class NodeFactory_4809107873070200372 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, SModel model) {
      //  Convert coordinates 
      {
        final SNode coords = sampleNode;
        if (SNodeOperations.isInstanceOf(coords, CONCEPTS.Coordinates$HV)) {
          InternalVector vector = CoordinateExpressionConverters.anyToRaw(coords);
          CoordinateExpressionConverters.rawToCylindrical(vector, newNode);
        }
      }

      //  Keep z expression as it was matching perfectly 
      {
        final SNode carts = sampleNode;
        if (SNodeOperations.isInstanceOf(carts, CONCEPTS.CartesianCoordinates$U8)) {
          SLinkOperations.setTarget(newNode, LINKS.height$ip86, SNodeOperations.copyNode(SLinkOperations.getTarget(carts, LINKS.dz$VWBn)));
        }
      }
    }
  }
  public static class NodeFactory_4809107873070296905 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, SModel model) {
      {
        final SNode coords = sampleNode;
        if (SNodeOperations.isInstanceOf(coords, CONCEPTS.Coordinates$HV)) {
          InternalVector vector = CoordinateExpressionConverters.anyToRaw(coords);
          CoordinateExpressionConverters.rawToCartesian(vector, newNode);
        }
      }

      //  Keep z expression as it was matching perfectly 
      {
        final SNode cyl = sampleNode;
        if (SNodeOperations.isInstanceOf(cyl, CONCEPTS.CylindricalCoordinates$9D)) {
          SLinkOperations.setTarget(newNode, LINKS.dz$VWBn, SNodeOperations.copyNode(SLinkOperations.getTarget(cyl, LINKS.height$ip86)));
        }
      }

    }
  }
  public static class NodeFactory_4809107873070306457 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, SModel model) {
      {
        final SNode coords = sampleNode;
        if (SNodeOperations.isInstanceOf(coords, CONCEPTS.Coordinates$HV)) {
          InternalVector vector = CoordinateExpressionConverters.anyToRaw(coords);
          CoordinateExpressionConverters.rawToSpherical(vector, newNode);
        }
      }

      //  Keep phi expression as it was matching perfectly 
      {
        final SNode cyl = sampleNode;
        if (SNodeOperations.isInstanceOf(cyl, CONCEPTS.CylindricalCoordinates$9D)) {
          SLinkOperations.setTarget(newNode, LINKS.phi$xD9b, SNodeOperations.copyNode(SLinkOperations.getTarget(cyl, LINKS.phi$ip6D)));
        }
      }
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Coordinates$HV = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a1443864979L, "jetbrains.mps.samples.Physics.structure.Coordinates");
    /*package*/ static final SConcept CartesianCoordinates$U8 = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, "jetbrains.mps.samples.Physics.structure.CartesianCoordinates");
    /*package*/ static final SConcept CylindricalCoordinates$9D = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, "jetbrains.mps.samples.Physics.structure.CylindricalCoordinates");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink height$ip86 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, 0xb0d6374ec996957L, "height");
    /*package*/ static final SContainmentLink dz$VWBn = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a5807f1L, "dz");
    /*package*/ static final SContainmentLink phi$xD9b = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8fL, 0x629c7a5121af2576L, "phi");
    /*package*/ static final SContainmentLink phi$ip6D = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, 0xb0d6374ec996954L, "phi");
  }
}
