package jetbrains.mps.samples.Physics.types.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class compare_ObjectTypes_ComparisonRule extends ComparisonRule_Runtime {
  public compare_ObjectTypes_ComparisonRule() {
  }
  public boolean areComparable(SNode node1, SNode node2, IsApplicable2Status status) {
    return true;
  }
  public boolean isWeak() {
    return true;
  }
  public IsApplicableStatus isApplicableFirst(SNode node) {
    return new IsApplicableStatus(node.getConcept().isSubConceptOf(getApplicableConcept1()), null);
  }
  public IsApplicableStatus isApplicableSecond(SNode node) {
    return new IsApplicableStatus(node.getConcept().isSubConceptOf(getApplicableConcept2()), null);
  }

  public SAbstractConcept getApplicableConcept1() {
    return CONCEPTS.ObjectType$sZ;
  }
  public SAbstractConcept getApplicableConcept2() {
    return CONCEPTS.ObjectType$sZ;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ObjectType$sZ = MetaAdapterFactory.getConcept(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, 0x6520d39c9501de46L, "jetbrains.mps.samples.Physics.types.structure.ObjectType");
  }
}
