package jetbrains.mps.samples.Physics.dimensions.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class UnitFactories {
  public static class NodeFactory_1430471042026629211 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, SModel model) {
      SPropertyOperations.assign(newNode, PROPS.factor$Z2DZ, "1");

      {
        final SNode unit = sampleNode;
        if (SNodeOperations.isInstanceOf(unit, CONCEPTS.ISimpleConverter$$d)) {
          SPropertyOperations.assign(newNode, PROPS.factor$Z2DZ, SPropertyOperations.getString(unit, PROPS.factor$Z2DZ));
        }
      }
    }
  }
  public static class NodeFactory_4252203113247588787 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, SModel model) {
      {
        final SNode dim = sampleNode;
        if (SNodeOperations.isInstanceOf(dim, CONCEPTS.Dimension$7F)) {
          SLinkOperations.setTarget(newNode, LINKS.default$rDru, SLinkOperations.getTarget(dim, LINKS.default$rDru));
          ListSequence.fromList(SLinkOperations.getChildren(newNode, LINKS.units$rDqw)).addSequence(ListSequence.fromList(SLinkOperations.getChildren(dim, LINKS.units$rDqw)));
          SPropertyOperations.assign(newNode, PROPS.name$tAp1, SPropertyOperations.getString(dim, PROPS.name$tAp1));
        }
      }
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty factor$Z2DZ = MetaAdapterFactory.getProperty(0x3571bff8cf914cd7L, 0xb8b7baa06abadf7cL, 0x13da0dd571835ca6L, 0x13da0dd571835ca8L, "factor");
    /*package*/ static final SProperty name$tAp1 = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept ISimpleConverter$$d = MetaAdapterFactory.getInterfaceConcept(0x3571bff8cf914cd7L, 0xb8b7baa06abadf7cL, 0x13da0dd571835ca6L, "jetbrains.mps.samples.Physics.dimensions.structure.ISimpleConverter");
    /*package*/ static final SConcept Dimension$7F = MetaAdapterFactory.getConcept(0x3571bff8cf914cd7L, 0xb8b7baa06abadf7cL, 0x1abd11603f7e0959L, "jetbrains.mps.samples.Physics.dimensions.structure.Dimension");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink default$rDru = MetaAdapterFactory.getContainmentLink(0x3571bff8cf914cd7L, 0xb8b7baa06abadf7cL, 0x1abd11603f7e0959L, 0x1abd11603f7e095cL, "default");
    /*package*/ static final SContainmentLink units$rDqw = MetaAdapterFactory.getContainmentLink(0x3571bff8cf914cd7L, 0xb8b7baa06abadf7cL, 0x1abd11603f7e0959L, 0x1abd11603f7e095aL, "units");
  }
}
