package main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typechecking.TypecheckingFacade;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.samples.Physics.behavior.DirectionalCoordinates__BehaviorDescriptor;
import jetbrains.mps.samples.Physics.plugin.NumberGenerationHelper;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.samples.Physics.genjs.plugin.NameMapping;
import jetbrains.mps.samples.Physics.behavior.Force__BehaviorDescriptor;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.samples.Physics.plugin.VectorGenerationHelper;
import jetbrains.mps.samples.Physics.behavior.IForceWithCache__BehaviorDescriptor;
import jetbrains.mps.generator.template.TemplateArgumentContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.samples.Physics.genjs.plugin.PlainTextRuntimeImporter;
import jetbrains.mps.generator.template.InsertMacroContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.ScriptCodeBlock;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import jetbrains.mps.generator.impl.query.InlineSwitchCaseCondition;
import jetbrains.mps.generator.template.InlineSwitchCaseContext;
import jetbrains.mps.generator.impl.query.ReferenceTargetQuery;
import jetbrains.mps.generator.impl.query.CallArgumentQuery;
import jetbrains.mps.generator.impl.query.InsertMacroQuery;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean rule_Condition_0_0(final BaseMappingRuleContext _context) {
    // Other cases possible? 
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$ne7z), CONCEPTS.DotExpression$jp);
  }
  public static boolean rule_Condition_2_0(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a2());
  }
  public static boolean rule_Condition_2_1(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a3());
  }
  public static boolean rule_Condition_2_2(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a4());
  }
  public static boolean rule_Condition_2_3(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0f()) && TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0f_0());
  }
  public static boolean rule_Condition_2_4(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0g()) && TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0g_0());
  }
  public static boolean rule_Condition_2_5(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0h_0()) || TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0h());
  }
  public static boolean rule_Condition_2_6(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0i_0()) || TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0i());
  }
  public static boolean rule_Condition_2_7(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0j_0()) || TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0j());
  }
  public static boolean rule_Condition_3_0(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ForceComponentsTarget$g7);
  }
  public static boolean rule_Condition_3_1(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ForceMomentTarget$NW);
  }
  public static boolean rule_Condition_3_2(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ForceApplicationPointTarget$b);
  }
  public static boolean rule_Condition_3_3(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectDistanceWithTarget$8g);
  }
  public static boolean rule_Condition_3_4(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectStyleDotTarget$nd);
  }
  public static boolean rule_Condition_3_5(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectMassTarget$Ts);
  }
  public static boolean rule_Condition_3_6(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectAngularVelocityTarget$bw);
  }
  public static boolean rule_Condition_3_7(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectPositionTarget$NL);
  }
  public static boolean rule_Condition_3_8(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectVelocityTarget$tE);
  }
  public static boolean rule_Condition_3_9(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.WorldMassCenterTarget$5N);
  }
  public static boolean rule_Condition_3_10(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorOppositeTarget$TJ);
  }
  public static boolean rule_Condition_3_11(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorResizeTarget$TT);
  }
  public static boolean rule_Condition_3_12(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.WorldNestedObjectTarget$GA);
  }
  public static boolean rule_Condition_3_13(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d);
  }
  public static boolean rule_Condition_3_14(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3d9L);
  }
  public static boolean rule_Condition_3_15(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3daL);
  }
  public static boolean rule_Condition_3_16(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3ddL);
  }
  public static boolean rule_Condition_3_17(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3f4L);
  }
  public static boolean rule_Condition_3_18(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3eeL);
  }
  public static boolean rule_Condition_3_19(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorComponentTarget$6d), PROPS.component$Szq), 0x6520d39c9504b3e9L);
  }
  public static boolean rule_Condition_4_0(final BaseMappingRuleContext _context) {
    return TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa)), _quotation_createNode_x583g4_b0a0a0eb()) || TypecheckingFacade.getFromContext().isSubtype(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)), _quotation_createNode_x583g4_b0a0a0eb_0());
  }
  public static boolean rule_Condition_6_0(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.source$ceR) != null) || (boolean) DirectionalCoordinates__BehaviorDescriptor.isPartOfPositionDefinition_id3Vp3qmbrxhw.invoke(_context.getNode()) || !((boolean) DirectionalCoordinates__BehaviorDescriptor.hasCurrentObjectContext_id19Axi8T0SGm.invoke(_context.getNode()));
  }
  public static boolean rule_Condition_6_1(final BaseMappingRuleContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.source$ceR) == null) && !((boolean) DirectionalCoordinates__BehaviorDescriptor.isPartOfPositionDefinition_id3Vp3qmbrxhw.invoke(_context.getNode())) && (boolean) DirectionalCoordinates__BehaviorDescriptor.hasCurrentObjectContext_id19Axi8T0SGm.invoke(_context.getNode());
  }
  public static boolean rule_Condition_9_0(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.reaction$4OQ3), 0x298a87ff7e3fd763L);
  }
  public static boolean rule_Condition_9_1(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.reaction$4OQ3), 0x298a87ff7e3fd767L);
  }
  public static boolean rule_Condition_9_2(final BaseMappingRuleContext _context) {
    return SEnumOperations.isMember(SPropertyOperations.getEnum(_context.getNode(), PROPS.reaction$4OQ3), 0x66b2f84fc32c32b8L);
  }
  public static boolean rule_Condition_10_0(final BaseMappingRuleContext _context) {
    return NumberGenerationHelper.isRational(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa))) || NumberGenerationHelper.isRational(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)));
  }
  public static boolean rule_Condition_11_0(final BaseMappingRuleContext _context) {
    return NumberGenerationHelper.isSupportedRationalBinary(_context.getNode());
  }
  public static boolean rule_Condition_11_1(final BaseMappingRuleContext _context) {
    return NumberGenerationHelper.isSupportedRationalBinary(_context.getNode());
  }
  public static boolean rule_Condition_11_2(final BaseMappingRuleContext _context) {
    return NumberGenerationHelper.isSupportedRationalBinary(_context.getNode());
  }
  public static boolean rule_Condition_11_3(final BaseMappingRuleContext _context) {
    return NumberGenerationHelper.isSupportedRationalBinary(_context.getNode());
  }
  public static boolean rule_Condition_11_4(final BaseMappingRuleContext _context) {
    return (NumberGenerationHelper.isRational(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa))) && NumberGenerationHelper.isString(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx)))) || (NumberGenerationHelper.isRational(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx))) && NumberGenerationHelper.isString(TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa))));
  }
  public static Object propertyMacro_GetValue_1_0(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.INamedConcept$Kd, false, false)) + "_" + SNodeOperations.getIndexInParent(_context.getNode());
  }
  public static Object propertyMacro_GetValue_1_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_3_0(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.WorldNestedObjectTarget$GA), LINKS.target$J$_T));
  }
  public static Object propertyMacro_GetValue_4_0(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(SLinkOperations.getTarget(_context.getNode(), LINKS.target$MKwz));
  }
  public static Object propertyMacro_GetValue_9_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getEnum(_context.getNode(), PROPS.shape$dHG3).getPresentation();
  }
  public static Object propertyMacro_GetValue_9_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.red$kg3_) + "";
  }
  public static Object propertyMacro_GetValue_9_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.green$kheE) + "";
  }
  public static Object propertyMacro_GetValue_9_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.blue$kgxB) + "";
  }
  public static Object propertyMacro_GetValue_9_4(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.url$6Hyz);
  }
  public static Object propertyMacro_GetValue_10_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.exponent$i0Yd);
  }
  public static Object propertyMacro_GetValue_14_0(final PropertyMacroContext _context) {
    if (SNodeOperations.isInstanceOf(_context.getNode(), CONCEPTS.IForceWithCache$_L)) {
      return "CachedForceMapper";
    }
    return "ForceMapper";
  }
  public static Object propertyMacro_GetValue_14_1(final PropertyMacroContext _context) {
    if (SNodeOperations.isInstanceOf(_context.getNode(), CONCEPTS.IForceWithCache$_L)) {
      return "CachedForceMapper";
    }
    return "ForceMapper";
  }
  public static Object propertyMacro_GetValue_14_2(final PropertyMacroContext _context) {
    return (int) Force__BehaviorDescriptor.getForceMode_id4$vyCQBiMP2.invoke(_context.getNode()) + "";
  }
  public static Object propertyMacro_GetValue_16_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replace("_", "__").replace(" ", "_");
  }
  public static Object propertyMacro_GetValue_18_0(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_1(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_2(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_3(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_4(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_5(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_6(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_7(final PropertyMacroContext _context) {
    return NameMapping.variableNameOf(_context.getNode());
  }
  public static Object propertyMacro_GetValue_18_8(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_19_0(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_19_1(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_20_0(final PropertyMacroContext _context) {
    return "compute" + _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_20_1(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_22_0(final PropertyMacroContext _context) {
    return _context.createUniqueValidId(_context.getNode());
  }
  public static Object propertyMacro_GetValue_22_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_22_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replace(" ", "") + "Script";
  }
  public static Object referenceMacro_GetReferent_1_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.as(SNodeOperations.getParent(_context.getNode()), CONCEPTS.Simulation$Gw), "classes");
  }
  public static Object referenceMacro_GetReferent_4_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.cacheOf$Rtlz), "forceMapper");
  }
  public static Object referenceMacro_GetReferent_14_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), LINKS.force$geAY), "abstractForce");
  }
  public static Object referenceMacro_GetReferent_15_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Force$Hb, false, false), "forceMapper");
  }
  public static Object referenceMacro_GetReferent_15_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Force$Hb, false, false), "forceMapper");
  }
  public static Object referenceMacro_GetReferent_18_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "modules");
  }
  public static Object referenceMacro_GetReferent_18_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "modules");
  }
  public static Object referenceMacro_GetReferent_18_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA), LINKS.target$kzX3), "classes");
  }
  public static Object referenceMacro_GetReferent_18_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classes");
  }
  public static Object referenceMacro_GetReferent_18_4(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.world$Tjdz), LINKS.target$vT2z), "classes");
  }
  public static Object referenceMacro_GetReferent_19_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA), LINKS.target$kzX3), "modules");
  }
  public static Object referenceMacro_GetReferent_19_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA), LINKS.target$kzX3), "classes");
  }
  public static Object referenceMacro_GetReferent_21_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "modules");
  }
  public static Object referenceMacro_GetReferent_22_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.world$Ang), LINKS.target$vT2z), "modules");
  }
  public static Object referenceMacro_GetReferent_22_1(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.world$Ang), LINKS.target$vT2z), "classes");
  }
  public static Object referenceMacro_GetReferent_22_2(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classes");
  }
  public static Object referenceMacro_GetReferent_22_3(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classes");
  }
  public static Object referenceMacro_GetReferent_23_0(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "modules");
  }
  public static boolean ifMacro_Condition_1_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.cameraPosition$1rJk) != null);
  }
  public static boolean ifMacro_Condition_1_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.cameraFocus$4vqm) != null);
  }
  public static boolean ifMacro_Condition_9_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.color$CDRp) != null);
  }
  public static boolean ifMacro_Condition_9_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.stroke$FXvv) != null);
  }
  public static boolean ifMacro_Condition_9_2(final IfMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), PROPS.isInfinite$Zky5);
  }
  public static boolean ifMacro_Condition_13_0(final IfMacroContext _context) {
    return (SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Simulation$Gw, false, false) == null) && (SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.WorldDefinition$gU, false, false) == null) && (SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.AbstractObjectDefinition$kn, false, false) == null);
  }
  public static boolean ifMacro_Condition_14_0(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), CONCEPTS.IForceWithCache$_L);
  }
  public static boolean ifMacro_Condition_14_1(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), CONCEPTS.IForceWithCache$_L);
  }
  public static boolean ifMacro_Condition_14_2(final IfMacroContext _context) {
    return (Force__BehaviorDescriptor.getLinearForceExpression_id4$vyCQBi$gg.invoke(_context.getNode()) != null);
  }
  public static boolean ifMacro_Condition_14_3(final IfMacroContext _context) {
    return (Force__BehaviorDescriptor.getMomentExpression_id2rJkT1EYuGl.invoke(_context.getNode()) != null);
  }
  public static boolean ifMacro_Condition_14_4(final IfMacroContext _context) {
    return (Force__BehaviorDescriptor.getApplicationPointExpression_id4$vyCQBi$go.invoke(_context.getNode()) != null);
  }
  public static boolean ifMacro_Condition_18_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.velocity$2C7$) != null);
  }
  public static boolean ifMacro_Condition_18_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.rotation$hBSM) != null);
  }
  public static boolean ifMacro_Condition_18_2(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.rotationSpeed$ugmV) != null);
  }
  public static boolean ifMacro_Condition_18_3(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA) != null);
  }
  public static boolean ifMacro_Condition_18_4(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.velocity$2C7$) != null);
  }
  public static boolean ifMacro_Condition_18_5(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.rotation$hBSM) != null);
  }
  public static boolean ifMacro_Condition_19_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA) != null);
  }
  public static boolean ifMacro_Condition_19_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.parent$k$qA) != null);
  }
  public static boolean ifMacro_Condition_22_0(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.simulationScale$eoNY) != null);
  }
  public static boolean ifMacro_Condition_22_1(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.cameraPosition$1rJk) != null);
  }
  public static boolean ifMacro_Condition_22_2(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), LINKS.cameraFocus$4vqm) != null);
  }
  public static SNode sourceNodeQuery_0_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expression$Va$7);
  }
  public static SNode sourceNodeQuery_0_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$ne7z), CONCEPTS.DotExpression$jp), LINKS.target$u23F);
  }
  public static SNode sourceNodeQuery_0_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.key$8IFS);
  }
  public static SNode sourceNodeQuery_0_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.value$c2jY);
  }
  public static SNode sourceNodeQuery_1_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.value$4pp9);
  }
  public static SNode sourceNodeQuery_1_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.cameraPosition$1rJk);
  }
  public static SNode sourceNodeQuery_1_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.cameraFocus$4vqm);
  }
  public static SNode sourceNodeQuery_2_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_10(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_11(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_12(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_13(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_2_14(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_2_15(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_3_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectDistanceWithTarget$8g), LINKS.target$Ky_o);
  }
  public static SNode sourceNodeQuery_3_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.ObjectStyleDotTarget$nd), LINKS.styleKey$MA4B);
  }
  public static SNode sourceNodeQuery_3_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_10(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_11(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_12(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_13(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_14(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), LINKS.target$u23F), CONCEPTS.VectorResizeTarget$TT), LINKS.newLength$uQH$);
  }
  public static SNode sourceNodeQuery_3_15(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_16(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_17(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_18(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_19(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_20(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_3_21(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_5_0(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("contextExpression"));
  }
  public static SNode sourceNodeQuery_5_1(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("valueExpression"));
  }
  public static SNode sourceNodeQuery_5_2(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("contextExpression"));
  }
  public static SNode sourceNodeQuery_5_3(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("valueExpression"));
  }
  public static SNode sourceNodeQuery_5_4(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("contextExpression"));
  }
  public static SNode sourceNodeQuery_5_5(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("valueExpression"));
  }
  public static SNode sourceNodeQuery_5_6(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("contextExpression"));
  }
  public static SNode sourceNodeQuery_5_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.styleKey$MA4B);
  }
  public static SNode sourceNodeQuery_5_8(final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("valueExpression"));
  }
  public static SNode sourceNodeQuery_6_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.dx$KTha);
  }
  public static SNode sourceNodeQuery_6_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.dy$1OJk);
  }
  public static SNode sourceNodeQuery_6_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.dz$1UnG);
  }
  public static SNode sourceNodeQuery_6_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.distance$iw9Y);
  }
  public static SNode sourceNodeQuery_6_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.theta$ivdU);
  }
  public static SNode sourceNodeQuery_6_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.phi$iuJS);
  }
  public static SNode sourceNodeQuery_6_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.axialDistance$TH3o);
  }
  public static SNode sourceNodeQuery_6_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.phi$THxq);
  }
  public static SNode sourceNodeQuery_6_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.height$TIet);
  }
  public static SNode sourceNodeQuery_6_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.coordinates$bdEA);
  }
  public static SNode sourceNodeQuery_6_10(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.relativeFrom$Z9n3);
  }
  public static SNode sourceNodeQuery_6_11(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.direction$5ONS);
  }
  public static SNode sourceNodeQuery_6_12(final SourceSubstituteMacroNodeContext _context) {
    // If a source is defined 
    if ((SLinkOperations.getTarget(_context.getNode(), LINKS.source$ceR) != null)) {
      return SLinkOperations.getTarget(_context.getNode(), LINKS.source$ceR);
    }

    return VectorGenerationHelper.emptyVector();
  }
  public static SNode sourceNodeQuery_6_13(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.length$5PhU);
  }
  public static SNode sourceNodeQuery_6_14(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.direction$5ONS);
  }
  public static SNode sourceNodeQuery_6_15(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.length$5PhU);
  }
  public static SNode sourceNodeQuery_7_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.c1$SM9s);
  }
  public static SNode sourceNodeQuery_7_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.c2$SMBu);
  }
  public static SNode sourceNodeQuery_7_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.c3$SNkx);
  }
  public static SNode sourceNodeQuery_7_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.axis$6LVA);
  }
  public static SNode sourceNodeQuery_7_4(final SourceSubstituteMacroNodeContext _context) {
    return NumberGenerationHelper.nodeOrZero(SLinkOperations.getTarget(_context.getNode(), LINKS.angle$6N6F));
  }
  public static SNode sourceNodeQuery_7_5(final SourceSubstituteMacroNodeContext _context) {
    return NumberGenerationHelper.nodeOrZero(SLinkOperations.getTarget(_context.getNode(), LINKS.alpha$EFZ_));
  }
  public static SNode sourceNodeQuery_7_6(final SourceSubstituteMacroNodeContext _context) {
    return NumberGenerationHelper.nodeOrZero(SLinkOperations.getTarget(_context.getNode(), LINKS.beta$EFxz));
  }
  public static SNode sourceNodeQuery_7_7(final SourceSubstituteMacroNodeContext _context) {
    return NumberGenerationHelper.nodeOrZero(SLinkOperations.getTarget(_context.getNode(), LINKS.gamma$ENY7));
  }
  public static SNode sourceNodeQuery_9_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.restitutionPercent$S732);
  }
  public static SNode sourceNodeQuery_9_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.color$CDRp);
  }
  public static SNode sourceNodeQuery_9_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.stroke$FXvv);
  }
  public static SNode sourceNodeQuery_9_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.color$gDjP), LINKS.definition$66DA);
  }
  public static SNode sourceNodeQuery_9_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.color$Zk43);
  }
  public static SNode sourceNodeQuery_9_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.color$Zk43);
  }
  public static SNode sourceNodeQuery_10_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.numerator$GF9U);
  }
  public static SNode sourceNodeQuery_10_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.denominator$GFQX);
  }
  public static SNode sourceNodeQuery_10_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$HIpj);
  }
  public static SNode sourceNodeQuery_10_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.exponent$uVP8);
  }
  public static SNode sourceNodeQuery_10_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Hji0);
  }
  public static SNode sourceNodeQuery_10_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$6jh$);
  }
  public static SNode sourceNodeQuery_10_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$tb$q);
  }
  public static SNode sourceNodeQuery_10_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$Zkit);
  }
  public static SNode sourceNodeQuery_10_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.logOf$oi4q);
  }
  public static SNode sourceNodeQuery_10_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.upper$A0Bs);
  }
  public static SNode sourceNodeQuery_10_10(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.lower$th62);
  }
  public static SNode sourceNodeQuery_10_11(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.body$A7bS);
  }
  public static SNode sourceNodeQuery_10_12(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.upper$A0Bs);
  }
  public static SNode sourceNodeQuery_10_13(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.lower$th62);
  }
  public static SNode sourceNodeQuery_10_14(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.body$A7bS);
  }
  public static SNode sourceNodeQuery_10_15(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expression$kXvr);
  }
  public static SNode sourceNodeQuery_11_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_11_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_11_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_11_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_11_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_11_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_11_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_11_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_11_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.left$zxUa);
  }
  public static SNode sourceNodeQuery_11_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.right$zBjx);
  }
  public static SNode sourceNodeQuery_12_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_10(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_12_11(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$a1Ah);
  }
  public static SNode sourceNodeQuery_14_0(final SourceSubstituteMacroNodeContext _context) {
    SNode cachedNode = SNodeOperations.as(_context.getNode(), CONCEPTS.IForceWithCache$_L);
    return (SNode) IForceWithCache__BehaviorDescriptor.getCachedValueExpression_id4$vyCQBisaz.invoke(cachedNode);
  }
  public static SNode sourceNodeQuery_14_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.condition$RXDZ);
  }
  public static SNode sourceNodeQuery_14_2(final SourceSubstituteMacroNodeContext _context) {
    SNode cachedNode = SNodeOperations.as(_context.getNode(), CONCEPTS.IForceWithCache$_L);
    return (SNode) IForceWithCache__BehaviorDescriptor.getCachedValueExpression_id4$vyCQBisaz.invoke(cachedNode);
  }
  public static SNode sourceNodeQuery_14_3(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Force__BehaviorDescriptor.getLinearForceExpression_id4$vyCQBi$gg.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_14_4(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Force__BehaviorDescriptor.getMomentExpression_id2rJkT1EYuGl.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_14_5(final SourceSubstituteMacroNodeContext _context) {
    return (SNode) Force__BehaviorDescriptor.getApplicationPointExpression_id4$vyCQBi$go.invoke(_context.getNode());
  }
  public static SNode sourceNodeQuery_15_0(final SourceSubstituteMacroNodeContext _context) {
    SNode cachedNode = SNodeOperations.as(_context.getNode(), CONCEPTS.IForceWithCache$_L);
    return (SNode) IForceWithCache__BehaviorDescriptor.getCachedValueExpression_id4$vyCQBisaz.invoke(cachedNode);
  }
  public static SNode sourceNodeQuery_18_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.mass$y8ay);
  }
  public static SNode sourceNodeQuery_18_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.position$2BSz);
  }
  public static SNode sourceNodeQuery_18_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.velocity$2C7$);
  }
  public static SNode sourceNodeQuery_18_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rotation$hBSM);
  }
  public static SNode sourceNodeQuery_18_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rotationSpeed$ugmV);
  }
  public static SNode sourceNodeQuery_18_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.position$2BSz);
  }
  public static SNode sourceNodeQuery_18_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.velocity$2C7$);
  }
  public static SNode sourceNodeQuery_18_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rotation$hBSM);
  }
  public static SNode sourceNodeQuery_20_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expression$T2aj);
  }
  public static SNode sourceNodeQuery_22_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.simulationSpeed$H2m$);
  }
  public static SNode sourceNodeQuery_22_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.simulationScale$eoNY);
  }
  public static SNode sourceNodeQuery_22_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.value$4pp9);
  }
  public static SNode sourceNodeQuery_22_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.cameraPosition$1rJk);
  }
  public static SNode sourceNodeQuery_22_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.cameraFocus$4vqm);
  }
  public static Object templateArgumentQuery_0_0(final TemplateArgumentContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(_context.getNode(), LINKS.target$ne7z), CONCEPTS.DotExpression$jp), LINKS.expr$Hji0);
  }
  public static Object templateArgumentQuery_0_1(final TemplateArgumentContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.newValue$njwU);
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.overrideRules$7JB0);
  }
  public static Iterable<SNode> sourceNodesQuery_1_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.metrics$2G7m);
  }
  public static Iterable<SNode> sourceNodesQuery_14_0(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.parameterValues$gf50)).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.force$geAY), LINKS.args$8wKH)).indexOf(SLinkOperations.getTarget(it, LINKS.argument$9$P2));
      }
    }, true).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, LINKS.value$v3XB);
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_18_0(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.includes$Atsz)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.world$Tjdz), LINKS.target$vT2z);
      }
    }).distinct();
  }
  public static Iterable<SNode> sourceNodesQuery_18_1(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.objects$E3a8)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, LINKS.parent$k$qA) != null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(SLinkOperations.getTarget(it, LINKS.parent$k$qA), LINKS.target$kzX3);
      }
    }).distinct();
  }
  public static Iterable<SNode> sourceNodesQuery_18_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.styles$7xP$);
  }
  public static Iterable<SNode> sourceNodesQuery_18_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.forces$k$SC);
  }
  public static Iterable<SNode> sourceNodesQuery_18_4(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.objects$E3a8);
  }
  public static Iterable<SNode> sourceNodesQuery_18_5(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.includes$Atsz);
  }
  public static Iterable<SNode> sourceNodesQuery_18_6(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.objects$E3a8);
  }
  public static Iterable<SNode> sourceNodesQuery_18_7(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.objects$E3a8);
  }
  public static Iterable<SNode> sourceNodesQuery_18_8(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.includes$Atsz);
  }
  public static Iterable<SNode> sourceNodesQuery_18_9(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.objects$E3a8);
  }
  public static Iterable<SNode> sourceNodesQuery_19_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.styles$7xP$);
  }
  public static Iterable<SNode> sourceNodesQuery_19_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.forces$k$SC);
  }
  public static Iterable<SNode> sourceNodesQuery_20_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.args$8wKH);
  }
  public static Iterable<SNode> sourceNodesQuery_21_0(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(), CONCEPTS.AbstractForceCall$fJ, false, new SAbstractConcept[]{})).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, LINKS.force$geAY);
      }
    }).distinct();
  }
  public static Iterable<SNode> sourceNodesQuery_22_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.overrideRules$7JB0);
  }
  public static Iterable<SNode> sourceNodesQuery_22_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.metrics$2G7m);
  }
  public static Iterable<SNode> sourceNodesQuery_22_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.views$tb0w);
  }
  public static Iterable<SNode> sourceNodesQuery_22_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.views$tb0w);
  }
  public static void mappingScript_CodeBlock_17(final MappingScriptContext _context) {
    _context.putStepObject("odejs", PlainTextRuntimeImporter.importFrom("libode.js"));
    _context.putStepObject("runtime", PlainTextRuntimeImporter.importFrom("runtime.js"));
  }
  public static SNode insertMacro_Query_16_0(final InsertMacroContext _context) {
    SNode object = (SNode) _context.getStepObject("odejs");
    return SNodeOperations.copyNode(object);
  }
  public static SNode insertMacro_Query_16_1(final InsertMacroContext _context) {
    SNode object = (SNode) _context.getStepObject("runtime");
    return SNodeOperations.copyNode(object);
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("6350314785813193860", new RRC(i++));
    rrcMethods.put("39352413653656284", new RRC(i++));
    rrcMethods.put("39352413653619012", new RRC(i++));
    rrcMethods.put("39352413653631927", new RRC(i++));
    rrcMethods.put("39352413653640898", new RRC(i++));
    rrcMethods.put("39352413653640928", new RRC(i++));
    rrcMethods.put("8705613676607219008", new RRC(i++));
    rrcMethods.put("8705613676607232176", new RRC(i++));
    rrcMethods.put("8705613676607233896", new RRC(i++));
    rrcMethods.put("8251732914774804209", new RRC(i++));
    rrcMethods.put("2621245635008239393", new RRC(i++));
    rrcMethods.put("2621245635008279471", new RRC(i++));
    rrcMethods.put("3489632902472800103", new RRC(i++));
    rrcMethods.put("166975754078077166", new RRC(i++));
    rrcMethods.put("2805552972622683295", new RRC(i++));
    rrcMethods.put("166975754078104901", new RRC(i++));
    rrcMethods.put("6779037360575300414", new RRC(i++));
    rrcMethods.put("8821912306507260828", new RRC(i++));
    rrcMethods.put("6779037360575708296", new RRC(i++));
    rrcMethods.put("5352272594417658619", new RRC(i++));
    rrcMethods.put("6779037360575674914", new RRC(i++));
    rrcMethods.put("166975754078130984", new RRC(i++));
    rrcMethods.put("166975754078169873", new RRC(i++));
    rrcMethods.put("39352413653601305", new RRC(i++));
    rrcMethods.put("5315786637368573772", new RRC(i++));
    rrcMethods.put("794591792987466843", new RRC(i++));
    rrcMethods.put("6373109377734023233", new RRC(i++));
    rrcMethods.put("7755739681131906176", new RRC(i++));
    rrcMethods.put("7755739681131790502", new RRC(i++));
    rrcMethods.put("7755739681131719678", new RRC(i++));
    rrcMethods.put("7755739681131674484", new RRC(i++));
    rrcMethods.put("1899408283183572220", new RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    ReductionRuleCondition query = identity.forTemplateNode(rrcMethods);
    return (query != null ? query : super.getReductionRuleCondition(identity));
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_0_0(ctx);
        case 1:
          return QueriesGenerated.rule_Condition_2_0(ctx);
        case 2:
          return QueriesGenerated.rule_Condition_2_1(ctx);
        case 3:
          return QueriesGenerated.rule_Condition_2_2(ctx);
        case 4:
          return QueriesGenerated.rule_Condition_2_3(ctx);
        case 5:
          return QueriesGenerated.rule_Condition_2_4(ctx);
        case 6:
          return QueriesGenerated.rule_Condition_2_5(ctx);
        case 7:
          return QueriesGenerated.rule_Condition_2_6(ctx);
        case 8:
          return QueriesGenerated.rule_Condition_2_7(ctx);
        case 9:
          return QueriesGenerated.rule_Condition_3_0(ctx);
        case 10:
          return QueriesGenerated.rule_Condition_3_1(ctx);
        case 11:
          return QueriesGenerated.rule_Condition_3_2(ctx);
        case 12:
          return QueriesGenerated.rule_Condition_3_3(ctx);
        case 13:
          return QueriesGenerated.rule_Condition_3_4(ctx);
        case 14:
          return QueriesGenerated.rule_Condition_3_5(ctx);
        case 15:
          return QueriesGenerated.rule_Condition_3_6(ctx);
        case 16:
          return QueriesGenerated.rule_Condition_3_7(ctx);
        case 17:
          return QueriesGenerated.rule_Condition_3_8(ctx);
        case 18:
          return QueriesGenerated.rule_Condition_3_9(ctx);
        case 19:
          return QueriesGenerated.rule_Condition_3_10(ctx);
        case 20:
          return QueriesGenerated.rule_Condition_3_11(ctx);
        case 21:
          return QueriesGenerated.rule_Condition_3_12(ctx);
        case 22:
          return QueriesGenerated.rule_Condition_3_13(ctx);
        case 23:
          return QueriesGenerated.rule_Condition_4_0(ctx);
        case 24:
          return QueriesGenerated.rule_Condition_6_0(ctx);
        case 25:
          return QueriesGenerated.rule_Condition_6_1(ctx);
        case 26:
          return QueriesGenerated.rule_Condition_10_0(ctx);
        case 27:
          return QueriesGenerated.rule_Condition_11_0(ctx);
        case 28:
          return QueriesGenerated.rule_Condition_11_1(ctx);
        case 29:
          return QueriesGenerated.rule_Condition_11_2(ctx);
        case 30:
          return QueriesGenerated.rule_Condition_11_3(ctx);
        case 31:
          return QueriesGenerated.rule_Condition_11_4(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ScriptCodeBlock> mscbMethods = new HashMap<String, ScriptCodeBlock>();
  {
    int i = 0;
    mscbMethods.put("936383789936896279", new SCB(i++));
  }
  @Override
  @NotNull
  public ScriptCodeBlock getScriptCodeBlock(@NotNull QueryKey identity) {
    ScriptCodeBlock query = identity.forTemplateNode(mscbMethods);
    return (query != null ? query : super.getScriptCodeBlock(identity));
  }
  private static class SCB implements ScriptCodeBlock {
    private final int methodKey;
    public SCB(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public void invoke(MappingScriptContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          QueriesGenerated.mappingScript_CodeBlock_17(ctx);
          return;
        default:
          throw new GenerationFailureException(String.format("There's no code block with method index %d ", methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("258579928627935093", new SNQ(i++));
    snqMethods.put("6777150301784777675", new SNQ(i++));
    snqMethods.put("6782395811088645667", new SNQ(i++));
    snqMethods.put("6782395811088645642", new SNQ(i++));
    snqMethods.put("5319492491019721099", new SNQ(i++));
    snqMethods.put("5319492491019639795", new SNQ(i++));
    snqMethods.put("5319492491019639825", new SNQ(i++));
    snqMethods.put("8251732914774603231", new SNQ(i++));
    snqMethods.put("8251732914774603698", new SNQ(i++));
    snqMethods.put("8251732914774606787", new SNQ(i++));
    snqMethods.put("8251732914774606796", new SNQ(i++));
    snqMethods.put("8251732914774613052", new SNQ(i++));
    snqMethods.put("8251732914774613061", new SNQ(i++));
    snqMethods.put("8251732914774616893", new SNQ(i++));
    snqMethods.put("8251732914774618099", new SNQ(i++));
    snqMethods.put("8251732914774622990", new SNQ(i++));
    snqMethods.put("8251732914774622999", new SNQ(i++));
    snqMethods.put("8251732914774623982", new SNQ(i++));
    snqMethods.put("8251732914774623991", new SNQ(i++));
    snqMethods.put("8251732914774627363", new SNQ(i++));
    snqMethods.put("8251732914774627372", new SNQ(i++));
    snqMethods.put("8251732914774628123", new SNQ(i++));
    snqMethods.put("8251732914774628132", new SNQ(i++));
    snqMethods.put("8251732914774829527", new SNQ(i++));
    snqMethods.put("8251732914774848845", new SNQ(i++));
    snqMethods.put("166975754078053516", new SNQ(i++));
    snqMethods.put("166975754078064779", new SNQ(i++));
    snqMethods.put("166975754078063648", new SNQ(i++));
    snqMethods.put("8138797205959637720", new SNQ(i++));
    snqMethods.put("166975754078099397", new SNQ(i++));
    snqMethods.put("166975754078103931", new SNQ(i++));
    snqMethods.put("166975754078115359", new SNQ(i++));
    snqMethods.put("166975754078121025", new SNQ(i++));
    snqMethods.put("166975754078121459", new SNQ(i++));
    snqMethods.put("166975754078122713", new SNQ(i++));
    snqMethods.put("166975754078124068", new SNQ(i++));
    snqMethods.put("166975754078129319", new SNQ(i++));
    snqMethods.put("166975754078128325", new SNQ(i++));
    snqMethods.put("166975754078138658", new SNQ(i++));
    snqMethods.put("166975754078182921", new SNQ(i++));
    snqMethods.put("166975754078183358", new SNQ(i++));
    snqMethods.put("166975754078185175", new SNQ(i++));
    snqMethods.put("166975754078186529", new SNQ(i++));
    snqMethods.put("166975754078187505", new SNQ(i++));
    snqMethods.put("166975754078189165", new SNQ(i++));
    snqMethods.put("166975754078469378", new SNQ(i++));
    snqMethods.put("166975754078466424", new SNQ(i++));
    snqMethods.put("166975754078469673", new SNQ(i++));
    snqMethods.put("166975754078469680", new SNQ(i++));
    snqMethods.put("166975754078470502", new SNQ(i++));
    snqMethods.put("166975754078470509", new SNQ(i++));
    snqMethods.put("166975754078470089", new SNQ(i++));
    snqMethods.put("166975754078472242", new SNQ(i++));
    snqMethods.put("166975754078470096", new SNQ(i++));
    snqMethods.put("8251732914774551321", new SNQ(i++));
    snqMethods.put("8251732914774551789", new SNQ(i++));
    snqMethods.put("8251732914774552257", new SNQ(i++));
    snqMethods.put("8251732914774553393", new SNQ(i++));
    snqMethods.put("8251732914774553861", new SNQ(i++));
    snqMethods.put("8251732914774554329", new SNQ(i++));
    snqMethods.put("8251732914774561505", new SNQ(i++));
    snqMethods.put("8251732914774561971", new SNQ(i++));
    snqMethods.put("8251732914774562437", new SNQ(i++));
    snqMethods.put("8251732914774554578", new SNQ(i++));
    snqMethods.put("8251732914774555029", new SNQ(i++));
    snqMethods.put("5315786637368573782", new SNQ(i++));
    snqMethods.put("5315786637368573791", new SNQ(i++));
    snqMethods.put("5315786637368573843", new SNQ(i++));
    snqMethods.put("8251732914774587573", new SNQ(i++));
    snqMethods.put("8251732914774588039", new SNQ(i++));
    snqMethods.put("8251732914774540693", new SNQ(i++));
    snqMethods.put("8251732914774541107", new SNQ(i++));
    snqMethods.put("8251732914774541179", new SNQ(i++));
    snqMethods.put("8251732914774544320", new SNQ(i++));
    snqMethods.put("8251732914774544523", new SNQ(i++));
    snqMethods.put("8251732914774546920", new SNQ(i++));
    snqMethods.put("8251732914774546499", new SNQ(i++));
    snqMethods.put("8251732914774546078", new SNQ(i++));
    snqMethods.put("258579928627612413", new SNQ(i++));
    snqMethods.put("258579928627599835", new SNQ(i++));
    snqMethods.put("258579928627606802", new SNQ(i++));
    snqMethods.put("258579928627582398", new SNQ(i++));
    snqMethods.put("258579928627594288", new SNQ(i++));
    snqMethods.put("258579928627597251", new SNQ(i++));
    snqMethods.put("166975754078209151", new SNQ(i++));
    snqMethods.put("166975754078209559", new SNQ(i++));
    snqMethods.put("166975754078221293", new SNQ(i++));
    snqMethods.put("166975754078221671", new SNQ(i++));
    snqMethods.put("166975754078222140", new SNQ(i++));
    snqMethods.put("166975754078236522", new SNQ(i++));
    snqMethods.put("166975754078237771", new SNQ(i++));
    snqMethods.put("166975754078239415", new SNQ(i++));
    snqMethods.put("166975754078241711", new SNQ(i++));
    snqMethods.put("166975754078282395", new SNQ(i++));
    snqMethods.put("166975754078284667", new SNQ(i++));
    snqMethods.put("166975754078285837", new SNQ(i++));
    snqMethods.put("166975754078409946", new SNQ(i++));
    snqMethods.put("166975754078409963", new SNQ(i++));
    snqMethods.put("166975754078409976", new SNQ(i++));
    snqMethods.put("166975754078242870", new SNQ(i++));
    snqMethods.put("166975754078254201", new SNQ(i++));
    snqMethods.put("166975754078254209", new SNQ(i++));
    snqMethods.put("166975754078259584", new SNQ(i++));
    snqMethods.put("166975754078259592", new SNQ(i++));
    snqMethods.put("166975754078261623", new SNQ(i++));
    snqMethods.put("166975754078261631", new SNQ(i++));
    snqMethods.put("166975754078263497", new SNQ(i++));
    snqMethods.put("166975754078263505", new SNQ(i++));
    snqMethods.put("166975754078266483", new SNQ(i++));
    snqMethods.put("166975754078266491", new SNQ(i++));
    snqMethods.put("166975754078417909", new SNQ(i++));
    snqMethods.put("166975754078420391", new SNQ(i++));
    snqMethods.put("166975754078420843", new SNQ(i++));
    snqMethods.put("166975754078421448", new SNQ(i++));
    snqMethods.put("166975754078421735", new SNQ(i++));
    snqMethods.put("166975754078422175", new SNQ(i++));
    snqMethods.put("166975754078422611", new SNQ(i++));
    snqMethods.put("166975754078423043", new SNQ(i++));
    snqMethods.put("166975754078423471", new SNQ(i++));
    snqMethods.put("166975754078423895", new SNQ(i++));
    snqMethods.put("166975754078424315", new SNQ(i++));
    snqMethods.put("166975754078424574", new SNQ(i++));
    snqMethods.put("6132055881369272876", new SNQ(i++));
    snqMethods.put("6132055881369275000", new SNQ(i++));
    snqMethods.put("5315786637368179320", new SNQ(i++));
    snqMethods.put("258579928627532046", new SNQ(i++));
    snqMethods.put("258579928627531291", new SNQ(i++));
    snqMethods.put("258579928627532108", new SNQ(i++));
    snqMethods.put("258579928627560845", new SNQ(i++));
    snqMethods.put("1557905991813901480", new SNQ(i++));
    snqMethods.put("1557905991813901495", new SNQ(i++));
    snqMethods.put("1557905991813901523", new SNQ(i++));
    snqMethods.put("1557905991813901588", new SNQ(i++));
    snqMethods.put("1557905991813901623", new SNQ(i++));
    snqMethods.put("1557905991813901832", new SNQ(i++));
    snqMethods.put("1557905991813901863", new SNQ(i++));
    snqMethods.put("1557905991813901882", new SNQ(i++));
    snqMethods.put("1557905991814047692", new SNQ(i++));
    snqMethods.put("1557905991817980959", new SNQ(i++));
    snqMethods.put("1557905991817980978", new SNQ(i++));
    snqMethods.put("1557905991817981118", new SNQ(i++));
    snqMethods.put("1557905991817981139", new SNQ(i++));
    snqMethods.put("1557905991817981162", new SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    SourceNodeQuery query = identity.forFunctionNode(snqMethods);
    return (query != null ? query : super.getSourceNodeQuery(identity));
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_0_0(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_0_1(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_0_2(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_0_3(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_1_0(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_1_1(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_1_2(ctx);
        case 7:
          return QueriesGenerated.sourceNodeQuery_2_0(ctx);
        case 8:
          return QueriesGenerated.sourceNodeQuery_2_1(ctx);
        case 9:
          return QueriesGenerated.sourceNodeQuery_2_2(ctx);
        case 10:
          return QueriesGenerated.sourceNodeQuery_2_3(ctx);
        case 11:
          return QueriesGenerated.sourceNodeQuery_2_4(ctx);
        case 12:
          return QueriesGenerated.sourceNodeQuery_2_5(ctx);
        case 13:
          return QueriesGenerated.sourceNodeQuery_2_6(ctx);
        case 14:
          return QueriesGenerated.sourceNodeQuery_2_7(ctx);
        case 15:
          return QueriesGenerated.sourceNodeQuery_2_8(ctx);
        case 16:
          return QueriesGenerated.sourceNodeQuery_2_9(ctx);
        case 17:
          return QueriesGenerated.sourceNodeQuery_2_10(ctx);
        case 18:
          return QueriesGenerated.sourceNodeQuery_2_11(ctx);
        case 19:
          return QueriesGenerated.sourceNodeQuery_2_12(ctx);
        case 20:
          return QueriesGenerated.sourceNodeQuery_2_13(ctx);
        case 21:
          return QueriesGenerated.sourceNodeQuery_2_14(ctx);
        case 22:
          return QueriesGenerated.sourceNodeQuery_2_15(ctx);
        case 23:
          return QueriesGenerated.sourceNodeQuery_3_0(ctx);
        case 24:
          return QueriesGenerated.sourceNodeQuery_3_1(ctx);
        case 25:
          return QueriesGenerated.sourceNodeQuery_3_2(ctx);
        case 26:
          return QueriesGenerated.sourceNodeQuery_3_3(ctx);
        case 27:
          return QueriesGenerated.sourceNodeQuery_3_4(ctx);
        case 28:
          return QueriesGenerated.sourceNodeQuery_3_5(ctx);
        case 29:
          return QueriesGenerated.sourceNodeQuery_3_6(ctx);
        case 30:
          return QueriesGenerated.sourceNodeQuery_3_7(ctx);
        case 31:
          return QueriesGenerated.sourceNodeQuery_3_8(ctx);
        case 32:
          return QueriesGenerated.sourceNodeQuery_3_9(ctx);
        case 33:
          return QueriesGenerated.sourceNodeQuery_3_10(ctx);
        case 34:
          return QueriesGenerated.sourceNodeQuery_3_11(ctx);
        case 35:
          return QueriesGenerated.sourceNodeQuery_3_12(ctx);
        case 36:
          return QueriesGenerated.sourceNodeQuery_3_13(ctx);
        case 37:
          return QueriesGenerated.sourceNodeQuery_3_14(ctx);
        case 38:
          return QueriesGenerated.sourceNodeQuery_3_15(ctx);
        case 39:
          return QueriesGenerated.sourceNodeQuery_3_16(ctx);
        case 40:
          return QueriesGenerated.sourceNodeQuery_3_17(ctx);
        case 41:
          return QueriesGenerated.sourceNodeQuery_3_18(ctx);
        case 42:
          return QueriesGenerated.sourceNodeQuery_3_19(ctx);
        case 43:
          return QueriesGenerated.sourceNodeQuery_3_20(ctx);
        case 44:
          return QueriesGenerated.sourceNodeQuery_3_21(ctx);
        case 45:
          return QueriesGenerated.sourceNodeQuery_5_0(ctx);
        case 46:
          return QueriesGenerated.sourceNodeQuery_5_1(ctx);
        case 47:
          return QueriesGenerated.sourceNodeQuery_5_2(ctx);
        case 48:
          return QueriesGenerated.sourceNodeQuery_5_3(ctx);
        case 49:
          return QueriesGenerated.sourceNodeQuery_5_4(ctx);
        case 50:
          return QueriesGenerated.sourceNodeQuery_5_5(ctx);
        case 51:
          return QueriesGenerated.sourceNodeQuery_5_6(ctx);
        case 52:
          return QueriesGenerated.sourceNodeQuery_5_7(ctx);
        case 53:
          return QueriesGenerated.sourceNodeQuery_5_8(ctx);
        case 54:
          return QueriesGenerated.sourceNodeQuery_6_0(ctx);
        case 55:
          return QueriesGenerated.sourceNodeQuery_6_1(ctx);
        case 56:
          return QueriesGenerated.sourceNodeQuery_6_2(ctx);
        case 57:
          return QueriesGenerated.sourceNodeQuery_6_3(ctx);
        case 58:
          return QueriesGenerated.sourceNodeQuery_6_4(ctx);
        case 59:
          return QueriesGenerated.sourceNodeQuery_6_5(ctx);
        case 60:
          return QueriesGenerated.sourceNodeQuery_6_6(ctx);
        case 61:
          return QueriesGenerated.sourceNodeQuery_6_7(ctx);
        case 62:
          return QueriesGenerated.sourceNodeQuery_6_8(ctx);
        case 63:
          return QueriesGenerated.sourceNodeQuery_6_9(ctx);
        case 64:
          return QueriesGenerated.sourceNodeQuery_6_10(ctx);
        case 65:
          return QueriesGenerated.sourceNodeQuery_6_11(ctx);
        case 66:
          return QueriesGenerated.sourceNodeQuery_6_12(ctx);
        case 67:
          return QueriesGenerated.sourceNodeQuery_6_13(ctx);
        case 68:
          return QueriesGenerated.sourceNodeQuery_6_14(ctx);
        case 69:
          return QueriesGenerated.sourceNodeQuery_6_15(ctx);
        case 70:
          return QueriesGenerated.sourceNodeQuery_7_0(ctx);
        case 71:
          return QueriesGenerated.sourceNodeQuery_7_1(ctx);
        case 72:
          return QueriesGenerated.sourceNodeQuery_7_2(ctx);
        case 73:
          return QueriesGenerated.sourceNodeQuery_7_3(ctx);
        case 74:
          return QueriesGenerated.sourceNodeQuery_7_4(ctx);
        case 75:
          return QueriesGenerated.sourceNodeQuery_7_5(ctx);
        case 76:
          return QueriesGenerated.sourceNodeQuery_7_6(ctx);
        case 77:
          return QueriesGenerated.sourceNodeQuery_7_7(ctx);
        case 78:
          return QueriesGenerated.sourceNodeQuery_9_0(ctx);
        case 79:
          return QueriesGenerated.sourceNodeQuery_9_1(ctx);
        case 80:
          return QueriesGenerated.sourceNodeQuery_9_2(ctx);
        case 81:
          return QueriesGenerated.sourceNodeQuery_9_3(ctx);
        case 82:
          return QueriesGenerated.sourceNodeQuery_9_4(ctx);
        case 83:
          return QueriesGenerated.sourceNodeQuery_9_5(ctx);
        case 84:
          return QueriesGenerated.sourceNodeQuery_10_0(ctx);
        case 85:
          return QueriesGenerated.sourceNodeQuery_10_1(ctx);
        case 86:
          return QueriesGenerated.sourceNodeQuery_10_2(ctx);
        case 87:
          return QueriesGenerated.sourceNodeQuery_10_3(ctx);
        case 88:
          return QueriesGenerated.sourceNodeQuery_10_4(ctx);
        case 89:
          return QueriesGenerated.sourceNodeQuery_10_5(ctx);
        case 90:
          return QueriesGenerated.sourceNodeQuery_10_6(ctx);
        case 91:
          return QueriesGenerated.sourceNodeQuery_10_7(ctx);
        case 92:
          return QueriesGenerated.sourceNodeQuery_10_8(ctx);
        case 93:
          return QueriesGenerated.sourceNodeQuery_10_9(ctx);
        case 94:
          return QueriesGenerated.sourceNodeQuery_10_10(ctx);
        case 95:
          return QueriesGenerated.sourceNodeQuery_10_11(ctx);
        case 96:
          return QueriesGenerated.sourceNodeQuery_10_12(ctx);
        case 97:
          return QueriesGenerated.sourceNodeQuery_10_13(ctx);
        case 98:
          return QueriesGenerated.sourceNodeQuery_10_14(ctx);
        case 99:
          return QueriesGenerated.sourceNodeQuery_10_15(ctx);
        case 100:
          return QueriesGenerated.sourceNodeQuery_11_0(ctx);
        case 101:
          return QueriesGenerated.sourceNodeQuery_11_1(ctx);
        case 102:
          return QueriesGenerated.sourceNodeQuery_11_2(ctx);
        case 103:
          return QueriesGenerated.sourceNodeQuery_11_3(ctx);
        case 104:
          return QueriesGenerated.sourceNodeQuery_11_4(ctx);
        case 105:
          return QueriesGenerated.sourceNodeQuery_11_5(ctx);
        case 106:
          return QueriesGenerated.sourceNodeQuery_11_6(ctx);
        case 107:
          return QueriesGenerated.sourceNodeQuery_11_7(ctx);
        case 108:
          return QueriesGenerated.sourceNodeQuery_11_8(ctx);
        case 109:
          return QueriesGenerated.sourceNodeQuery_11_9(ctx);
        case 110:
          return QueriesGenerated.sourceNodeQuery_12_0(ctx);
        case 111:
          return QueriesGenerated.sourceNodeQuery_12_1(ctx);
        case 112:
          return QueriesGenerated.sourceNodeQuery_12_2(ctx);
        case 113:
          return QueriesGenerated.sourceNodeQuery_12_3(ctx);
        case 114:
          return QueriesGenerated.sourceNodeQuery_12_4(ctx);
        case 115:
          return QueriesGenerated.sourceNodeQuery_12_5(ctx);
        case 116:
          return QueriesGenerated.sourceNodeQuery_12_6(ctx);
        case 117:
          return QueriesGenerated.sourceNodeQuery_12_7(ctx);
        case 118:
          return QueriesGenerated.sourceNodeQuery_12_8(ctx);
        case 119:
          return QueriesGenerated.sourceNodeQuery_12_9(ctx);
        case 120:
          return QueriesGenerated.sourceNodeQuery_12_10(ctx);
        case 121:
          return QueriesGenerated.sourceNodeQuery_12_11(ctx);
        case 122:
          return QueriesGenerated.sourceNodeQuery_14_0(ctx);
        case 123:
          return QueriesGenerated.sourceNodeQuery_14_1(ctx);
        case 124:
          return QueriesGenerated.sourceNodeQuery_14_2(ctx);
        case 125:
          return QueriesGenerated.sourceNodeQuery_14_3(ctx);
        case 126:
          return QueriesGenerated.sourceNodeQuery_14_4(ctx);
        case 127:
          return QueriesGenerated.sourceNodeQuery_14_5(ctx);
        case 128:
          return QueriesGenerated.sourceNodeQuery_15_0(ctx);
        case 129:
          return QueriesGenerated.sourceNodeQuery_18_0(ctx);
        case 130:
          return QueriesGenerated.sourceNodeQuery_18_1(ctx);
        case 131:
          return QueriesGenerated.sourceNodeQuery_18_2(ctx);
        case 132:
          return QueriesGenerated.sourceNodeQuery_18_3(ctx);
        case 133:
          return QueriesGenerated.sourceNodeQuery_18_4(ctx);
        case 134:
          return QueriesGenerated.sourceNodeQuery_18_5(ctx);
        case 135:
          return QueriesGenerated.sourceNodeQuery_18_6(ctx);
        case 136:
          return QueriesGenerated.sourceNodeQuery_18_7(ctx);
        case 137:
          return QueriesGenerated.sourceNodeQuery_20_0(ctx);
        case 138:
          return QueriesGenerated.sourceNodeQuery_22_0(ctx);
        case 139:
          return QueriesGenerated.sourceNodeQuery_22_1(ctx);
        case 140:
          return QueriesGenerated.sourceNodeQuery_22_2(ctx);
        case 141:
          return QueriesGenerated.sourceNodeQuery_22_3(ctx);
        case 142:
          return QueriesGenerated.sourceNodeQuery_22_4(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("5319492491019721063", new SNsQ(i++));
    snsqMethods.put("5319492491019721106", new SNsQ(i++));
    snsqMethods.put("2191706013853338315", new SNsQ(i++));
    snsqMethods.put("1557905991814136552", new SNsQ(i++));
    snsqMethods.put("1557905991814081521", new SNsQ(i++));
    snsqMethods.put("1557905991813901649", new SNsQ(i++));
    snsqMethods.put("1557905991813901659", new SNsQ(i++));
    snsqMethods.put("1557905991813901672", new SNsQ(i++));
    snsqMethods.put("1557905991813901715", new SNsQ(i++));
    snsqMethods.put("1557905991813901730", new SNsQ(i++));
    snsqMethods.put("1557905991813901803", new SNsQ(i++));
    snsqMethods.put("1557905991813901918", new SNsQ(i++));
    snsqMethods.put("1557905991813901938", new SNsQ(i++));
    snsqMethods.put("1557905991813957058", new SNsQ(i++));
    snsqMethods.put("1557905991813957068", new SNsQ(i++));
    snsqMethods.put("1557905991814047672", new SNsQ(i++));
    snsqMethods.put("1557905991814212474", new SNsQ(i++));
    snsqMethods.put("1557905991817981084", new SNsQ(i++));
    snsqMethods.put("1557905991817981125", new SNsQ(i++));
    snsqMethods.put("1557905991817981181", new SNsQ(i++));
    snsqMethods.put("1557905991817981215", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_14_0(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_0(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_1(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_2(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_3(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_4(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_5(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_6(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_7(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_8(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_18_9(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_19_0(ctx));
        case 14:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_19_1(ctx));
        case 15:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_20_0(ctx));
        case 16:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_21_0(ctx));
        case 17:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_22_0(ctx));
        case 18:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_22_1(ctx));
        case 19:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_22_2(ctx));
        case 20:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_22_3(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("146165670324934065", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "Simulation"));
    pvqMethods.put("5319492491019721085", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad01eeL, 0x76eb757dfbad0290L, "doubleQuotedValue"), "Some text"));
    pvqMethods.put("166975754078139559", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "somePlanet"));
    pvqMethods.put("166975754078449484", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "somePlanet"));
    pvqMethods.put("258579928627563262", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad01eeL, 0x6b3be8de9331a183L, "singleQuotedValue"), "someShape"));
    pvqMethods.put("258579928627567977", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad0b9bL, 0x76eb757dfbad0c3cL, "value"), "0"));
    pvqMethods.put("258579928627571457", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad0b9bL, 0x76eb757dfbad0c3cL, "value"), "0"));
    pvqMethods.put("258579928627574920", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad0b9bL, 0x76eb757dfbad0c3cL, "value"), "0"));
    pvqMethods.put("258579928627579492", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad01eeL, 0x76eb757dfbad0290L, "doubleQuotedValue"), "someImage.jpg"));
    pvqMethods.put("166975754078244336", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad0b9bL, 0x76eb757dfbad0c3cL, "value"), "3"));
    pvqMethods.put("6132055881369272841", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "ForceMapper"));
    pvqMethods.put("258579928627521970", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "ForceMapper"));
    pvqMethods.put("258579928627549188", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad0b9bL, 0x76eb757dfbad0c3cL, "value"), "3"));
    pvqMethods.put("3295425759950181080", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mapSimulationWebPage"));
    pvqMethods.put("1557905991813901461", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "PhysicalObject"));
    pvqMethods.put("1557905991813901708", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "someIncludedWorld"));
    pvqMethods.put("1557905991813901723", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "somePlanet"));
    pvqMethods.put("1557905991813901737", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "WorldDefintion"));
    pvqMethods.put("1557905991813901768", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "somePlanet"));
    pvqMethods.put("1557905991813901781", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad01eeL, 0x76eb757dfbad0290L, "doubleQuotedValue"), "someName"));
    pvqMethods.put("1557905991813901814", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "someIncludedWorld"));
    pvqMethods.put("1557905991813901930", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "somePlanet"));
    pvqMethods.put("1557905991814283835", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mapWorldDefinition"));
    pvqMethods.put("1557905991813957036", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "AbstractObject"));
    pvqMethods.put("1557905991815039896", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mapAbstractObject"));
    pvqMethods.put("1557905991814047700", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "computeAbstractForce"));
    pvqMethods.put("1557905991814963194", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mapAbstractForce"));
    pvqMethods.put("1557905991817980985", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "Simulation"));
    pvqMethods.put("1557905991817981106", new PVQ(i++, MetaAdapterFactory.getProperty(0xa48297046b1b4b3fL, 0x8122a4a2e6ac90ffL, 0x76eb757dfbad01eeL, 0x76eb757dfbad0290L, "doubleQuotedValue"), "Some text"));
    pvqMethods.put("1557905991817994508", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mapSimulationScript"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_1_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_1_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_3_0(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_4_0(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_9_0(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_9_1(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_9_2(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_9_3(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_9_4(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_10_0(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_14_0(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetValue_14_1(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetValue_14_2(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetValue_16_0(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetValue_18_0(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetValue_18_1(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetValue_18_2(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetValue_18_3(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetValue_18_4(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetValue_18_5(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetValue_18_6(ctx);
        case 21:
          return QueriesGenerated.propertyMacro_GetValue_18_7(ctx);
        case 22:
          return QueriesGenerated.propertyMacro_GetValue_18_8(ctx);
        case 23:
          return QueriesGenerated.propertyMacro_GetValue_19_0(ctx);
        case 24:
          return QueriesGenerated.propertyMacro_GetValue_19_1(ctx);
        case 25:
          return QueriesGenerated.propertyMacro_GetValue_20_0(ctx);
        case 26:
          return QueriesGenerated.propertyMacro_GetValue_20_1(ctx);
        case 27:
          return QueriesGenerated.propertyMacro_GetValue_22_0(ctx);
        case 28:
          return QueriesGenerated.propertyMacro_GetValue_22_1(ctx);
        case 29:
          return QueriesGenerated.propertyMacro_GetValue_22_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("5319492491019639801", new IfMC(i++));
    imcMethods.put("5319492491019639831", new IfMC(i++));
    imcMethods.put("258579928627600032", new IfMC(i++));
    imcMethods.put("258579928627606790", new IfMC(i++));
    imcMethods.put("258579928627587065", new IfMC(i++));
    imcMethods.put("4072913923462581015", new IfMC(i++));
    imcMethods.put("6132055881369272891", new IfMC(i++));
    imcMethods.put("5315786637368180545", new IfMC(i++));
    imcMethods.put("258579928627532040", new IfMC(i++));
    imcMethods.put("258579928627531273", new IfMC(i++));
    imcMethods.put("258579928627532102", new IfMC(i++));
    imcMethods.put("1557905991813901542", new IfMC(i++));
    imcMethods.put("1557905991813901599", new IfMC(i++));
    imcMethods.put("1557905991813901630", new IfMC(i++));
    imcMethods.put("1557905991813901679", new IfMC(i++));
    imcMethods.put("1557905991813901843", new IfMC(i++));
    imcMethods.put("1557905991813901888", new IfMC(i++));
    imcMethods.put("1557905991814301127", new IfMC(i++));
    imcMethods.put("1557905991813957081", new IfMC(i++));
    imcMethods.put("1557905991817980966", new IfMC(i++));
    imcMethods.put("1557905991817981145", new IfMC(i++));
    imcMethods.put("1557905991817981168", new IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    IfMacroCondition query = identity.forTemplateNode(imcMethods);
    return (query != null ? query : super.getIfMacroCondition(identity));
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_1_0(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_1_1(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_9_0(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_9_1(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_9_2(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_13_0(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_14_0(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_14_1(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_14_2(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_14_3(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_14_4(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_18_0(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_18_1(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_18_2(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_18_3(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_18_4(ctx);
        case 16:
          return QueriesGenerated.ifMacro_Condition_18_5(ctx);
        case 17:
          return QueriesGenerated.ifMacro_Condition_19_0(ctx);
        case 18:
          return QueriesGenerated.ifMacro_Condition_19_1(ctx);
        case 19:
          return QueriesGenerated.ifMacro_Condition_22_0(ctx);
        case 20:
          return QueriesGenerated.ifMacro_Condition_22_1(ctx);
        case 21:
          return QueriesGenerated.ifMacro_Condition_22_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, InlineSwitchCaseCondition> isccMethods = new HashMap<String, InlineSwitchCaseCondition>();
  {
    int i = 0;
    isccMethods.put("166975754078169885", new ISCC(i++));
    isccMethods.put("166975754078169911", new ISCC(i++));
    isccMethods.put("166975754078169937", new ISCC(i++));
    isccMethods.put("166975754078169963", new ISCC(i++));
    isccMethods.put("166975754078169989", new ISCC(i++));
    isccMethods.put("166975754078170015", new ISCC(i++));
    isccMethods.put("7400250159182914193", new ISCC(i++));
    isccMethods.put("7400250159182918182", new ISCC(i++));
    isccMethods.put("7400250159183730633", new ISCC(i++));
  }
  @NotNull
  @Override
  public InlineSwitchCaseCondition getInlineSwitchCaseCondition(@NotNull QueryKey identity) {
    InlineSwitchCaseCondition query = identity.forTemplateNode(isccMethods);
    return (query != null ? query : super.getInlineSwitchCaseCondition(identity));
  }
  private static class ISCC implements InlineSwitchCaseCondition {
    private final int methodKey;
    public ISCC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull InlineSwitchCaseContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_3_14(ctx);
        case 1:
          return QueriesGenerated.rule_Condition_3_15(ctx);
        case 2:
          return QueriesGenerated.rule_Condition_3_16(ctx);
        case 3:
          return QueriesGenerated.rule_Condition_3_17(ctx);
        case 4:
          return QueriesGenerated.rule_Condition_3_18(ctx);
        case 5:
          return QueriesGenerated.rule_Condition_3_19(ctx);
        case 6:
          return QueriesGenerated.rule_Condition_9_0(ctx);
        case 7:
          return QueriesGenerated.rule_Condition_9_1(ctx);
        case 8:
          return QueriesGenerated.rule_Condition_9_2(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for inline switch's case %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, ReferenceTargetQuery> rtqMethods = new HashMap<String, ReferenceTargetQuery>();
  {
    rtqMethods.put("5319492491019673598", new RTQ(0, ""));
    rtqMethods.put("6782395811089765927", new RTQ(1, "mapper"));
    rtqMethods.put("2191706013853338350", new RTQ(2, "computeForceFunction"));
    rtqMethods.put("5315786637368077198", new RTQ(3, "mapper"));
    rtqMethods.put("5315786637368079579", new RTQ(4, "mapper"));
    rtqMethods.put("1557905991814190708", new RTQ(5, "mapWorldDefinition"));
    rtqMethods.put("1557905991814133273", new RTQ(6, "mapAbstractObject"));
    rtqMethods.put("1557905991813901692", new RTQ(7, null));
    rtqMethods.put("1557905991813901791", new RTQ(8, null));
    rtqMethods.put("1557905991813901902", new RTQ(9, null));
    rtqMethods.put("1557905991814306764", new RTQ(10, "mapAbstractObject"));
    rtqMethods.put("1557905991813957094", new RTQ(11, null));
    rtqMethods.put("1557905991814210927", new RTQ(12, "mapAbstractForce"));
    rtqMethods.put("1557905991817980937", new RTQ(13, "mapWorldDefinition"));
    rtqMethods.put("1557905991817981070", new RTQ(14, null));
    rtqMethods.put("1557905991817981197", new RTQ(15, ""));
    rtqMethods.put("1557905991817981206", new RTQ(16, ""));
    rtqMethods.put("1557905991818005195", new RTQ(17, "mapSimulationScript"));
  }
  @NotNull
  @Override
  public ReferenceTargetQuery getReferenceTargetQuery(@NotNull QueryKey queryKey) {
    ReferenceTargetQuery query = queryKey.forTemplateNode(rtqMethods);
    return (query != null ? query : super.getReferenceTargetQuery(queryKey));
  }
  private static class RTQ extends ReferenceTargetQuery.Base {
    private final int methodKey;
    /*package*/ RTQ(int methodKey, String templateValue) {
      super(templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull ReferenceMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.referenceMacro_GetReferent_1_0(ctx);
        case 1:
          return QueriesGenerated.referenceMacro_GetReferent_4_0(ctx);
        case 2:
          return QueriesGenerated.referenceMacro_GetReferent_14_0(ctx);
        case 3:
          return QueriesGenerated.referenceMacro_GetReferent_15_0(ctx);
        case 4:
          return QueriesGenerated.referenceMacro_GetReferent_15_1(ctx);
        case 5:
          return QueriesGenerated.referenceMacro_GetReferent_18_0(ctx);
        case 6:
          return QueriesGenerated.referenceMacro_GetReferent_18_1(ctx);
        case 7:
          return QueriesGenerated.referenceMacro_GetReferent_18_2(ctx);
        case 8:
          return QueriesGenerated.referenceMacro_GetReferent_18_3(ctx);
        case 9:
          return QueriesGenerated.referenceMacro_GetReferent_18_4(ctx);
        case 10:
          return QueriesGenerated.referenceMacro_GetReferent_19_0(ctx);
        case 11:
          return QueriesGenerated.referenceMacro_GetReferent_19_1(ctx);
        case 12:
          return QueriesGenerated.referenceMacro_GetReferent_21_0(ctx);
        case 13:
          return QueriesGenerated.referenceMacro_GetReferent_22_0(ctx);
        case 14:
          return QueriesGenerated.referenceMacro_GetReferent_22_1(ctx);
        case 15:
          return QueriesGenerated.referenceMacro_GetReferent_22_2(ctx);
        case 16:
          return QueriesGenerated.referenceMacro_GetReferent_22_3(ctx);
        case 17:
          return QueriesGenerated.referenceMacro_GetReferent_23_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, CallArgumentQuery> caqMethods = new HashMap<String, CallArgumentQuery>();
  {
    caqMethods.put("6350314785813425832", new CAQ(0));
    caqMethods.put("6350314785813419601", new CAQ(1));
  }
  @NotNull
  @Override
  public CallArgumentQuery getTemplateCallArgumentQuery(@NotNull QueryKey queryKey) {
    CallArgumentQuery query = queryKey.forTemplateNode(caqMethods);
    return (query != null ? query : super.getTemplateCallArgumentQuery(queryKey));
  }
  private static class CAQ implements CallArgumentQuery {
    private final int methodKey;
    /*package*/ CAQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull TemplateArgumentContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.templateArgumentQuery_0_0(ctx);
        case 1:
          return QueriesGenerated.templateArgumentQuery_0_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, InsertMacroQuery> imqMethods = new HashMap<String, InsertMacroQuery>();
  {
    imqMethods.put("936383789936904424", new IMQ(0));
    imqMethods.put("936383789937366804", new IMQ(1));
  }
  @NotNull
  @Override
  public InsertMacroQuery getInsertMacroQuery(@NotNull QueryKey queryKey) {
    InsertMacroQuery query = queryKey.forTemplateNode(imqMethods);
    return (query != null ? query : super.getInsertMacroQuery(queryKey));
  }
  private static class IMQ implements InsertMacroQuery {
    private final int methodKey;
    /*package*/ IMQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull InsertMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.insertMacro_Query_16_0(ctx);
        case 1:
          return QueriesGenerated.insertMacro_Query_16_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static SNode _quotation_createNode_x583g4_b0a0a2() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a3() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a4() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0f() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0f_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0g() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0g_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0h() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0h_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0i() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0i_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0j() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0j_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0eb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_b0a0a0eb_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf3e9841eb1da4548L, 0x9cb814aebaf1d1caL, "jetbrains.mps.samples.Physics.types"), 0x6520d39c950a1448L, "DirectionType")).getResult();
    return quotedNode_1;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink target$ne7z = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3238375e772f9fedL, 0x3238375e772f9feeL, "target");
    /*package*/ static final SContainmentLink left$zxUa = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L, 0x46ff3b3d86c99c16L, "left");
    /*package*/ static final SContainmentLink right$zBjx = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L, 0x46ff3b3d86c99c18L, "right");
    /*package*/ static final SContainmentLink target$u23F = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L, 0x7cef88020a0f424bL, "target");
    /*package*/ static final SContainmentLink source$ceR = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6d74ae1e883a4471L, 0x3ed90da58b6e2fb6L, "source");
    /*package*/ static final SReferenceLink target$J$_T = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x22ff7dd8e3878c9cL, 0x22ff7dd8e38793cbL, "target");
    /*package*/ static final SReferenceLink target$MKwz = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba5bL, 0x6b7f605cb32fba5cL, "target");
    /*package*/ static final SReferenceLink cacheOf$Rtlz = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x491f8a8da78a723bL, 0x491f8a8da78a723cL, "cacheOf");
    /*package*/ static final SReferenceLink force$geAY = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438be6a0L, 0x3126c7c72473eb96L, "force");
    /*package*/ static final SContainmentLink parent$k$qA = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e43L, 0x1441545e2a5b1e47L, "parent");
    /*package*/ static final SReferenceLink target$kzX3 = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e44L, 0x1441545e2a5b1e45L, "target");
    /*package*/ static final SContainmentLink world$Tjdz = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3cd406ea6df343a0L, 0x3cd406ea6df343a1L, "world");
    /*package*/ static final SReferenceLink target$vT2z = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5d5cbb75843c860L, 0x5d5cbb75843c861L, "target");
    /*package*/ static final SContainmentLink world$Ang = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba58L, 0x3cd406ea6def9f02L, "world");
    /*package*/ static final SContainmentLink cameraPosition$1rJk = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5820d9a6fbf7a539L, 0x55d23bae7b62a2a7L, "cameraPosition");
    /*package*/ static final SContainmentLink cameraFocus$4vqm = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5820d9a6fbf7a539L, 0x55d23bae7b62a2e0L, "cameraFocus");
    /*package*/ static final SContainmentLink color$CDRp = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xcad58369f2a9ffcL, 0xcad58369f2aa271L, "color");
    /*package*/ static final SContainmentLink stroke$FXvv = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xcad58369f2a9ffcL, 0xcad58369f2aa2c4L, "stroke");
    /*package*/ static final SContainmentLink velocity$2C7$ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3cd406ea6df3fe05L, 0x3cd406ea6df3fe07L, "velocity");
    /*package*/ static final SContainmentLink rotation$hBSM = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3cd406ea6df3fe05L, 0x4dcb9d0527cc0319L, "rotation");
    /*package*/ static final SContainmentLink rotationSpeed$ugmV = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb3278f43L, 0x4dcb9d0527c44d06L, "rotationSpeed");
    /*package*/ static final SContainmentLink simulationScale$eoNY = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba58L, 0x1baa8b95dda3ac89L, "simulationScale");
    /*package*/ static final SContainmentLink expression$Va$7 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec7f738eL, 0xb0d6374ec7f7393L, "expression");
    /*package*/ static final SContainmentLink key$8IFS = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x101711d69774a425L, 0x2b1dfd95e2c4124fL, "key");
    /*package*/ static final SContainmentLink value$c2jY = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x101711d69774a425L, 0x2b1dfd95e2c412a2L, "value");
    /*package*/ static final SContainmentLink value$4pp9 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3c4704d6394ad30bL, 0x3c4704d6394ad609L, "value");
    /*package*/ static final SContainmentLink expr$Hji0 = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cd0f69L, 0x46ff3b3d86cd0f6bL, "expr");
    /*package*/ static final SContainmentLink target$Ky_o = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x339d8f0ab560d03L, 0x339d8f0ab560d04L, "target");
    /*package*/ static final SContainmentLink styleKey$MA4B = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x29b2190b93c8e27bL, 0x29b2190b93c8e280L, "styleKey");
    /*package*/ static final SContainmentLink newLength$uQH$ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x306daaa2cbe24f94L, 0x306daaa2cbe24f96L, "newLength");
    /*package*/ static final SContainmentLink dx$KTha = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a580637L, "dx");
    /*package*/ static final SContainmentLink dy$1OJk = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a5807eeL, "dy");
    /*package*/ static final SContainmentLink dz$1UnG = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8bL, 0x1441545e2a5807f1L, "dz");
    /*package*/ static final SContainmentLink distance$iw9Y = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8fL, 0x629c7a5121af257cL, "distance");
    /*package*/ static final SContainmentLink theta$ivdU = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8fL, 0x629c7a5121af2578L, "theta");
    /*package*/ static final SContainmentLink phi$iuJS = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa8fL, 0x629c7a5121af2576L, "phi");
    /*package*/ static final SContainmentLink axialDistance$TH3o = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, 0xb0d6374ec996952L, "axialDistance");
    /*package*/ static final SContainmentLink phi$THxq = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, 0xb0d6374ec996954L, "phi");
    /*package*/ static final SContainmentLink height$TIet = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb0d6374ec996951L, 0xb0d6374ec996957L, "height");
    /*package*/ static final SContainmentLink coordinates$bdEA = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa6bL, 0x1918a6b053ddd35aL, "coordinates");
    /*package*/ static final SContainmentLink relativeFrom$Z9n3 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x584bed834752fa6bL, 0x584bed834752fa6cL, "relativeFrom");
    /*package*/ static final SContainmentLink direction$5ONS = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6d74ae1e883a4471L, 0x6d74ae1e883a4472L, "direction");
    /*package*/ static final SContainmentLink length$5PhU = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6d74ae1e883a4471L, 0x6d74ae1e883a4474L, "length");
    /*package*/ static final SContainmentLink c1$SM9s = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c249d9L, 0x4dcb9d0527c24c0fL, "c1");
    /*package*/ static final SContainmentLink c2$SMBu = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c249d9L, 0x4dcb9d0527c24c11L, "c2");
    /*package*/ static final SContainmentLink c3$SNkx = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c249d9L, 0x4dcb9d0527c24c14L, "c3");
    /*package*/ static final SContainmentLink axis$6LVA = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c232f1L, 0x4dcb9d0527c2499aL, "axis");
    /*package*/ static final SContainmentLink angle$6N6F = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c232f1L, 0x4dcb9d0527c2499fL, "angle");
    /*package*/ static final SContainmentLink alpha$EFZ_ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c4004aL, "alpha");
    /*package*/ static final SContainmentLink beta$EFxz = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c40048L, "beta");
    /*package*/ static final SContainmentLink gamma$ENY7 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4dcb9d0527c40047L, 0x4dcb9d0527c40057L, "gamma");
    /*package*/ static final SContainmentLink restitutionPercent$S732 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5b463016ba87dbfeL, 0x5b463016ba87dce5L, "restitutionPercent");
    /*package*/ static final SReferenceLink color$gDjP = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e65L, 0xb06f5069ab75031L, "color");
    /*package*/ static final SContainmentLink definition$66DA = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xb06f5069ab7502eL, 0xb06f5069abcb0c9L, "definition");
    /*package*/ static final SContainmentLink color$Zk43 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6ff53cf971434976L, 0x6ff53cf971434977L, "color");
    /*package*/ static final SContainmentLink numerator$GF9U = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9bcd46L, 0x449e19d04e9bcd47L, "numerator");
    /*package*/ static final SContainmentLink denominator$GFQX = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9bcd46L, 0x449e19d04e9bcd4aL, "denominator");
    /*package*/ static final SContainmentLink expr$HIpj = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9c6144L, 0x449e19d04e9cdee2L, "expr");
    /*package*/ static final SContainmentLink exponent$uVP8 = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9c6144L, 0x46c15b39e5605f2fL, "exponent");
    /*package*/ static final SContainmentLink expr$6jh$ = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9c8de8L, 0x449e19d04e9c9e3cL, "expr");
    /*package*/ static final SContainmentLink expr$tb$q = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9bc799L, 0x449e19d04e9c91dbL, "expr");
    /*package*/ static final SContainmentLink expr$Zkit = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9bdff7L, 0x449e19d04e9c9964L, "expr");
    /*package*/ static final SContainmentLink logOf$oi4q = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9bdff7L, 0x449e19d04e9bdff8L, "logOf");
    /*package*/ static final SContainmentLink upper$A0Bs = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9be6f0L, 0xd7c3339c4eec93fL, "upper");
    /*package*/ static final SContainmentLink lower$th62 = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9be6f0L, 0xd7c3339c4f027e5L, "lower");
    /*package*/ static final SContainmentLink body$A7bS = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0x449e19d04e9be6f0L, 0xd7c3339c4eec946L, "body");
    /*package*/ static final SContainmentLink expression$kXvr = MetaAdapterFactory.getContainmentLink(0xf9bdc72399df40ffL, 0x934cd1f848158f92L, 0x5abff817741099d3L, 0x5abff81774111c3aL, "expression");
    /*package*/ static final SContainmentLink expr$a1Ah = MetaAdapterFactory.getContainmentLink(0x6fadc44e69c24a4aL, 0x9d167ebf5f8d3ba0L, 0xc873bfda72da17eL, 0xc873bfda72da181L, "expr");
    /*package*/ static final SContainmentLink condition$RXDZ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x491f8a8da74947aeL, 0x491f8a8da74a0c98L, "condition");
    /*package*/ static final SContainmentLink mass$y8ay = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb3278f43L, 0x1be152c1502448ffL, "mass");
    /*package*/ static final SContainmentLink position$2BSz = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3cd406ea6df3fe05L, 0x3cd406ea6df3fe06L, "position");
    /*package*/ static final SContainmentLink expression$T2aj = MetaAdapterFactory.getContainmentLink(0x9464fa065ab9409bL, 0x927464ab29588457L, 0x68d69d36ba520706L, 0x68d69d36ba520b43L, "expression");
    /*package*/ static final SContainmentLink simulationSpeed$H2m$ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba58L, 0x21c0d825ab3fd1e0L, "simulationSpeed");
    /*package*/ static final SContainmentLink newValue$njwU = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x3238375e772f9fedL, 0x3238375e772f9ff0L, "newValue");
    /*package*/ static final SContainmentLink overrideRules$7JB0 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5820d9a6fbf7a539L, 0x3238375e772fa01bL, "overrideRules");
    /*package*/ static final SContainmentLink metrics$2G7m = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x5820d9a6fbf7a539L, 0x3c4704d6394ad6e3L, "metrics");
    /*package*/ static final SContainmentLink parameterValues$gf50 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438be6a0L, 0x3126c7c72473eb98L, "parameterValues");
    /*package*/ static final SContainmentLink args$8wKH = MetaAdapterFactory.getContainmentLink(0x9464fa065ab9409bL, 0x927464ab29588457L, 0x68d69d36ba520706L, 0x68d69d36ba520707L, "args");
    /*package*/ static final SReferenceLink argument$9$P2 = MetaAdapterFactory.getReferenceLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xd84d5bfb280c701L, 0xd84d5bfb280d74aL, "argument");
    /*package*/ static final SContainmentLink value$v3XB = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0xd84d5bfb280c701L, 0xd84d5bfb2832d0cL, "value");
    /*package*/ static final SContainmentLink includes$Atsz = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb3278f40L, 0x3cd406ea6df3437dL, "includes");
    /*package*/ static final SContainmentLink objects$E3a8 = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb3278f40L, 0x6b7f605cb3278f46L, "objects");
    /*package*/ static final SContainmentLink styles$7xP$ = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e43L, 0x101711d69793d8a9L, "styles");
    /*package*/ static final SContainmentLink forces$k$SC = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e43L, 0x1441545e2a5b1e49L, "forces");
    /*package*/ static final SContainmentLink views$tb0w = MetaAdapterFactory.getContainmentLink(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba58L, 0x5820d9a6fbf7a533L, "views");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DotExpression$jp = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L, "org.iets3.core.expr.base.structure.DotExpression");
    /*package*/ static final SConcept ForceComponentsTarget$g7 = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x78d08d83b98a73b5L, "jetbrains.mps.samples.Physics.structure.ForceComponentsTarget");
    /*package*/ static final SConcept ForceMomentTarget$NW = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x26ef53906afd798eL, "jetbrains.mps.samples.Physics.structure.ForceMomentTarget");
    /*package*/ static final SConcept ForceApplicationPointTarget$b = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x78d08d83b98a8e76L, "jetbrains.mps.samples.Physics.structure.ForceApplicationPointTarget");
    /*package*/ static final SConcept ObjectDistanceWithTarget$8g = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x339d8f0ab560d03L, "jetbrains.mps.samples.Physics.structure.ObjectDistanceWithTarget");
    /*package*/ static final SConcept ObjectStyleDotTarget$nd = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x29b2190b93c8e27bL, "jetbrains.mps.samples.Physics.structure.ObjectStyleDotTarget");
    /*package*/ static final SConcept ObjectMassTarget$Ts = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6520d39c95047fcaL, "jetbrains.mps.samples.Physics.structure.ObjectMassTarget");
    /*package*/ static final SConcept ObjectAngularVelocityTarget$bw = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x26ef53906b115c9bL, "jetbrains.mps.samples.Physics.structure.ObjectAngularVelocityTarget");
    /*package*/ static final SConcept ObjectPositionTarget$NL = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6520d39c9504a71bL, "jetbrains.mps.samples.Physics.structure.ObjectPositionTarget");
    /*package*/ static final SConcept ObjectVelocityTarget$tE = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x4a4717912b4b2f7eL, "jetbrains.mps.samples.Physics.structure.ObjectVelocityTarget");
    /*package*/ static final SConcept WorldMassCenterTarget$5N = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6520d39c9504a750L, "jetbrains.mps.samples.Physics.structure.WorldMassCenterTarget");
    /*package*/ static final SConcept VectorOppositeTarget$TJ = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x339d8f0ab6a0bccL, "jetbrains.mps.samples.Physics.structure.VectorOppositeTarget");
    /*package*/ static final SConcept VectorResizeTarget$TT = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x306daaa2cbe24f94L, "jetbrains.mps.samples.Physics.structure.VectorResizeTarget");
    /*package*/ static final SConcept WorldNestedObjectTarget$GA = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x22ff7dd8e3878c9cL, "jetbrains.mps.samples.Physics.structure.WorldNestedObjectTarget");
    /*package*/ static final SConcept VectorComponentTarget$6d = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6520d39c9504b3d7L, "jetbrains.mps.samples.Physics.structure.VectorComponentTarget");
    /*package*/ static final SInterfaceConcept INamedConcept$Kd = MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept");
    /*package*/ static final SInterfaceConcept IForceWithCache$_L = MetaAdapterFactory.getInterfaceConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x491f8a8da749c297L, "jetbrains.mps.samples.Physics.structure.IForceWithCache");
    /*package*/ static final SConcept Simulation$Gw = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb32fba58L, "jetbrains.mps.samples.Physics.structure.Simulation");
    /*package*/ static final SConcept Force$Hb = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a58062fL, "jetbrains.mps.samples.Physics.structure.Force");
    /*package*/ static final SConcept WorldDefinition$gU = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6b7f605cb3278f40L, "jetbrains.mps.samples.Physics.structure.WorldDefinition");
    /*package*/ static final SConcept AbstractObjectDefinition$kn = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x1441545e2a5b1e43L, "jetbrains.mps.samples.Physics.structure.AbstractObjectDefinition");
    /*package*/ static final SConcept AbstractForceCall$fJ = MetaAdapterFactory.getConcept(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438be6a0L, "jetbrains.mps.samples.Physics.structure.AbstractForceCall");
  }

  private static final class PROPS {
    /*package*/ static final SProperty component$Szq = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6520d39c9504b3d7L, 0x6520d39c9504b3fbL, "component");
    /*package*/ static final SProperty reaction$4OQ3 = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x2b1dfd95e2d94529L, 0x2b1dfd95e2d9452aL, "reaction");
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty shape$dHG3 = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x2b1dfd95e2ddf664L, 0x2b1dfd95e2ddf665L, "shape");
    /*package*/ static final SProperty red$kg3_ = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438863e1L, 0x14f63a14438863e4L, "red");
    /*package*/ static final SProperty green$kheE = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438863e1L, 0x14f63a14438863e9L, "green");
    /*package*/ static final SProperty blue$kgxB = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a14438863e1L, 0x14f63a14438863e6L, "blue");
    /*package*/ static final SProperty url$6Hyz = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x14f63a144388655eL, 0xcad58369e8b9e91L, "url");
    /*package*/ static final SProperty exponent$i0Yd = MetaAdapterFactory.getProperty(0xf9bdc72399df40ffL, 0x934cd1f848158f92L, 0x5abff817741099d3L, 0x4a2d0770b38f4fa2L, "exponent");
    /*package*/ static final SProperty isInfinite$Zky5 = MetaAdapterFactory.getProperty(0xbe81eb124eda4d0eL, 0x89be7493500ab874L, 0x6ff53cf971434976L, 0x6ff53cf971434979L, "isInfinite");
  }
}
